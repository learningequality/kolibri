name: Build WHL file

on:
  workflow_call:
    outputs:
      whl-file-name:
        description: "WHL file name"
        value: ${{ jobs.build_whl.outputs.whl-file-name }}
      tar-file-name:
        description: "TAR file name"
        value: ${{ jobs.build_whl.outputs.tar-file-name }}

jobs:
  build_whl:
    name: Build WHL
    runs-on: ubuntu-latest
    outputs:
      whl-file-name: ${{ steps.get-whl-filename.outputs.whl-file-name }}
      tar-file-name: ${{ steps.get-tar-filename.outputs.tar-file-name }}
    steps:
    - uses: actions/checkout@v2
    - name: Install Ubuntu dependencies
      run: |
        sudo apt-get -y -qq update
        sudo apt-get install -y gettext
    - name: Set up Python 2.7
      uses: actions/setup-python@v3
      with:
        python-version: 2.7
        cache: 'pip'
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'yarn'
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-node-
    - name: Install Javascript dependencies
      run: yarn --frozen-lockfile
    - name: Cache C extensions
      uses: actions/cache@v2
      with:
        path: cext_cache
        key: ${{ runner.os }}-cext-${{ hashFiles('requirements/cext*.txt') }}
        restore-keys: |
          ${{ runner.os }}-cext-
    - name: Install Python build dependencies
      run: pip install -r requirements/build.txt
    - name: Build Kolibri
      run: make dist
    - name: Get WHL filename
      id: get-whl-filename
      run: echo "::set-output name=whl-file-name::$(ls dist | grep .whl | cat)"
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.get-whl-filename.outputs.whl-file-name }}
        path: dist/${{ steps.get-whl-filename.outputs.whl-file-name }}
    - name: Get TAR filename
      id: get-tar-filename
      run: echo "::set-output name=tar-file-name::$(ls dist | grep .tar | cat)"
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.get-tar-filename.outputs.tar-file-name }}
        path: dist/${{ steps.get-tar-filename.outputs.tar-file-name }}
