name: Python tests

on:
  push:
    branches:
    - develop
    - 'release-v**'
  pull_request:
    branches:
    - develop
    - 'release-v**'

jobs:
  pre_job:
    name: Path match check
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths: '["**.py", "requirements/*.txt", ".github/workflows/tox.yml", "tox.ini"]'
  unit_test:
    name: Python unit tests
    needs: pre_job
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: |
        python -m pip install --upgrade pip
        pip install "tox<4"
    - name: tox env cache
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/.tox/py${{ matrix.python-version }}
        key: ${{ runner.os }}-tox-py${{ matrix.python-version }}-${{ hashFiles('requirements/*.txt') }}
    - name: Test with tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: tox -e py${{ matrix.python-version }}
  unit_test27:
    name: Python unit tests (2.7)
    needs: pre_job
    runs-on: ubuntu-20.04
    container:
      image: python:2.7.18-buster
    steps:
    - uses: actions/checkout@v4
    - name: Install tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: |
        python -m pip install --upgrade pip
        pip install "tox<4"
    - name: tox env cache
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/.tox/py2.7
        key: ${{ runner.os }}-tox-py2.7-${{ hashFiles('requirements/*.txt') }}
    - name: Test with tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: tox -e py2.7
  postgres:
    name: Python postgres unit tests
    needs: pre_job
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9 for Postgres
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: |
        python -m pip install --upgrade pip
        pip install "tox<4"
    - name: tox env cache
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/.tox/py3.9
        key: ${{ runner.os }}-tox-py3.9-${{ hashFiles('requirements/*.txt') }}
    - name: Test with tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: tox -e postgres
  macos:
    name: Python unit tests on Mac OS
    needs: pre_job
    runs-on: macos-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: |
        python -m pip install --upgrade pip
        pip install "tox<4"
    - name: tox env cache
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/.tox/py${{ matrix.python-version }}
        key: ${{ runner.os }}-tox-py${{ matrix.python-version }}-${{ hashFiles('requirements/*.txt') }}
    - name: Test with tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: tox -e py${{ matrix.python-version }}
  windows:
    name: Python unit tests on Windows Server
    needs: pre_job
    runs-on: windows-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: |
        python -m pip install --upgrade pip
        pip install "tox<4"
    - name: Test with tox
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
      run: tox -e py${{ matrix.python-version }}
