name: Upload Python Package

on:
  workflow_call:
    inputs:
      whl-file-name:
        required: true
        type: string
      tar-file-name:
        required: true
        type: string
      test:
        description: 'Should this be uploaded to testpypi?'
        required: true
        type: boolean
    secrets:
      GPG_SIGNING_KEY:
        required: true
      GPG_PASSPHRASE:
        required: true
      TESTPYPI_API_TOKEN:
        required: true
      PYPI_API_TOKEN:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.whl-file-name }}
        path: dist
    - uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.tar-file-name }}
        path: dist
    - name: Configure GPG Key
      run: |
        echo -n "${{ secrets.GPG_SIGNING_KEY }}" | base64 --decode | gpg --import --no-tty --batch --yes
    - name: Sign wheel
      run: gpg --batch --pinentry loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}" --detach-sign --armor dist/${{ inputs.whl-file-name }}
    - name: Sign tarball
      run: gpg --batch --pinentry loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}" --detach-sign --armor dist/${{ inputs.tar-file-name }}
    - name: Publish to TestPyPi
      if: ${{ inputs.test }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
      run: |
        twine upload -s -r testpypi dist/*
    - name: Publish to PyPi
      if: ${{ !inputs.test }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload -s dist/*
