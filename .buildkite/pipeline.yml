steps:
  - label: Build Python packages
    command:
     - mkdir -p dist
     - .buildkite/build_whl.sh

  - wait

  - trigger: "kolibri-macos"
    label: ":mac:"
    build:
      message: "${BUILDKITE_MESSAGE}"
      env:
        LE_TRIGGERED_FROM_BUILD_ID: "${BUILDKITE_BUILD_ID}"
        LE_TRIGGERED_FROM_JOB_ID: "${BUILDKITE_JOB_ID}"
        # Determines whether build will be autoblocked or not.
        # Autoblock unless there's a tag associated with the commit. Usually a release.
        LE_KOLIBRI_RELEASE: "${BUILDKITE_TAG:-false}"

  - trigger: "kolibri-debian"
    label: ":debian:"
    key: deb-build
    build:
      message: "${BUILDKITE_MESSAGE}"
      env:
        LE_TRIGGERED_FROM_BUILD_ID: "${BUILDKITE_BUILD_ID}"
        LE_TRIGGERED_FROM_JOB_ID: "${BUILDKITE_JOB_ID}"
        # Determines whether build will be autoblocked or not.
        # Autoblock unless there's a tag associated with the commit. Usually a release.
        LE_KOLIBRI_RELEASE: "${BUILDKITE_TAG:-false}"

  - trigger: "kolibri-raspbian-image"
    label: ":raspberry-pi:"
    build:
      message: "${BUILDKITE_MESSAGE}"
      env:
        LE_TRIGGERED_FROM_BUILD_ID: "${BUILDKITE_BUILD_ID}"
        LE_TRIGGERED_FROM_JOB_ID: "${BUILDKITE_JOB_ID}"
        # Determines whether build will be autoblocked or not.
        # Autoblock unless there's a tag associated with the commit. Usually a release.
        LE_KOLIBRI_RELEASE: "${BUILDKITE_TAG:-false}"
    depends_on:
      - deb-build

  - label: Build Windows installer
    command: .buildkite/build_windows_installer.sh

  - wait

  - label: Upload Release Artifacts
    command: .buildkite/setup_and_upload_artifact.sh
    if: build.tag != null

  - wait

  - block: "Create integration testing worksheet?"
  - label: Create integration testing
    command: .buildkite/build_worksheet.sh
