# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-05-18 17:31
from __future__ import unicode_literals

from functools import partial

from django.db import migrations
from django.db import OperationalError
from django.db import ProgrammingError

import kolibri.core.fields
import kolibri.utils.time_utils


def convert_datetime_to_datetimetz(apps, schema_editor, model_name=None):
    if model_name:
        Model = apps.get_model("logger", model_name)
        try:
            # Prevent the non-existence of this table from blowing up test runs
            # Seems to only occur on test runs on Travis, but otherwise works fine
            # Hopefully future migration squashes should prevent this code being
            # called at all for new users
            for model in Model.objects.all():
                model.save()
        except (OperationalError, ProgrammingError):
            pass


class Migration(migrations.Migration):

    dependencies = [("logger", "0001_initial")]

    operations = [
        migrations.AlterField(
            model_name="attemptlog",
            name="completion_timestamp",
            field=kolibri.core.fields.DateTimeTzField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="attemptlog",
            name="end_timestamp",
            field=kolibri.core.fields.DateTimeTzField(),
        ),
        migrations.AlterField(
            model_name="attemptlog",
            name="start_timestamp",
            field=kolibri.core.fields.DateTimeTzField(),
        ),
        migrations.RunPython(
            partial(convert_datetime_to_datetimetz, model_name="AttemptLog")
        ),
        migrations.AlterField(
            model_name="contentsessionlog",
            name="end_timestamp",
            field=kolibri.core.fields.DateTimeTzField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="contentsessionlog",
            name="start_timestamp",
            field=kolibri.core.fields.DateTimeTzField(),
        ),
        migrations.RunPython(
            partial(convert_datetime_to_datetimetz, model_name="ContentSessionLog")
        ),
        migrations.AlterField(
            model_name="contentsummarylog",
            name="completion_timestamp",
            field=kolibri.core.fields.DateTimeTzField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="contentsummarylog",
            name="end_timestamp",
            field=kolibri.core.fields.DateTimeTzField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="contentsummarylog",
            name="start_timestamp",
            field=kolibri.core.fields.DateTimeTzField(),
        ),
        migrations.RunPython(
            partial(convert_datetime_to_datetimetz, model_name="ContentSummaryLog")
        ),
        migrations.AlterField(
            model_name="examattemptlog",
            name="completion_timestamp",
            field=kolibri.core.fields.DateTimeTzField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="examattemptlog",
            name="end_timestamp",
            field=kolibri.core.fields.DateTimeTzField(),
        ),
        migrations.AlterField(
            model_name="examattemptlog",
            name="start_timestamp",
            field=kolibri.core.fields.DateTimeTzField(),
        ),
        migrations.RunPython(
            partial(convert_datetime_to_datetimetz, model_name="ExamAttemptLog")
        ),
        migrations.AlterField(
            model_name="examlog",
            name="completion_timestamp",
            field=kolibri.core.fields.DateTimeTzField(blank=True, null=True),
        ),
        migrations.RunPython(
            partial(convert_datetime_to_datetimetz, model_name="ExamLog")
        ),
        migrations.AlterField(
            model_name="masterylog",
            name="completion_timestamp",
            field=kolibri.core.fields.DateTimeTzField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="masterylog",
            name="end_timestamp",
            field=kolibri.core.fields.DateTimeTzField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="masterylog",
            name="start_timestamp",
            field=kolibri.core.fields.DateTimeTzField(),
        ),
        migrations.RunPython(
            partial(convert_datetime_to_datetimetz, model_name="MasteryLog")
        ),
        migrations.AlterField(
            model_name="usersessionlog",
            name="last_interaction_timestamp",
            field=kolibri.core.fields.DateTimeTzField(null=True),
        ),
        migrations.AlterField(
            model_name="usersessionlog",
            name="start_timestamp",
            field=kolibri.core.fields.DateTimeTzField(
                default=kolibri.utils.time_utils.local_now
            ),
        ),
        migrations.RunPython(
            partial(convert_datetime_to_datetimetz, model_name="UserSessionLog")
        ),
    ]
