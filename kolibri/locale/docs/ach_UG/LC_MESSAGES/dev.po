msgid ""
msgstr ""
"Project-Id-Version: kolibri\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-02 23:01+0000\n"
"PO-Revision-Date: 2017-08-23 18:16-0400\n"
"Last-Translator: learningequality <accounts@learningequality.org>\n"
"Language-Team: Acholi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: kolibri\n"
"X-Crowdin-Language: ach\n"
"X-Crowdin-File: /release-v0.5.x/docs/en/LC_MESSAGES/dev.po\n"
"Language: ach_UG\n"

#: ../../dev/asset_loading.rst:2
msgid "Front-end Asset Loading"
msgstr "crwdns14814:0crwdne14814:0"

#: ../../dev/asset_loading.rst:4
msgid "Asset pipelining is done using Webpack - this allows the use of require to import modules - as such all written code should be highly modular, individual files should be responsible for exporting a single function or object."
msgstr "crwdns14815:0crwdne14815:0"

#: ../../dev/asset_loading.rst:6
msgid "There are two distinct entities that control this behaviour - a Kolibri Hook on the Python side, which manages the registration of the frontend code within Django (and also facilitates building of that code into compiled assets with Webpack) and a Kolibri Module (a subclass of ``KolibriModule``) on the JavaScript side (see :doc:`frontend`)."
msgstr "crwdns14816:0:doc:crwdne14816:0"

#: ../../dev/asset_loading.rst:8
msgid "Kolibri has a system for synchronously and asynchronously loading these bundled JavaScript modules which is mediated by a small core JavaScript app, ``kolibriGlobal``. Kolibri Modules define to which events they subscribe, and asynchronously registered Kolibri Modules are loaded by ``kolibriGlobal`` only when those events are triggered. For example if the Video Viewer's Kolibri Module subscribes to the *content_loaded:video* event, then when that event is triggered on ``kolibriGlobal`` it will asynchronously load the Video Viewer module and re-trigger the *content_loaded:video* event on the object the module returns."
msgstr "crwdns14817:0crwdne14817:0"

#: ../../dev/asset_loading.rst:10
msgid "Synchronous and asynchronous loading is defined by the template tag used to import the JavaScript for the Kolibri Module into the Django template. Synchronous loading merely inserts the JavaScript and CSS for the Kolibri Module directly into the Django template, meaning it is executed at page load."
msgstr "crwdns14818:0crwdne14818:0"

#: ../../dev/asset_loading.rst:12
msgid "This can be achieved in two ways using tags defined in *kolibri/core/webpack/templatetags/webpack_tags.py*."
msgstr "crwdns14819:0crwdne14819:0"

#: ../../dev/asset_loading.rst:14
msgid "The first way is simply by using the ``webpack_asset`` template tag."
msgstr "crwdns14820:0crwdne14820:0"

#: ../../dev/asset_loading.rst:16
msgid "The second way is if a Kolibri Module needs to load in the template defined by another plugin or a core part of Kolibri, a template tag and hook can be defined to register that Kolibri Module's assets to be loaded on that page. An example of this is found in the ``base.html`` template using the ``webpack_base_assets`` tag."
msgstr "crwdns14821:0crwdne14821:0"

#: ../../dev/asset_loading.rst:18
msgid "This relies on the following function to collect all registered Kolibri Modules and load them synchronously: ``kolibri.core.webpack.utils.webpack_asset_render``"
msgstr "crwdns14822:0crwdne14822:0"

#: ../../dev/asset_loading.rst:20
msgid "Asynchronous loading can also, analogously, be done in two ways. Asynchronous loading registers a Kolibri Module against ``kolibriGlobal`` on the frontend at page load, but does not load, or execute any of the code until the events that the Kolibri Module specifies are triggered. When these are triggered, the ``kolibriGlobal`` will load the Kolibri Module and pass on any callbacks once it has initialized. Asynchronous loading can be done either explicitly with a template tag that directly imports a single Kolibri Module using ``webpack_base_async_assets``."
msgstr "crwdns14823:0crwdne14823:0"

#: ../../dev/building.rst:2
msgid "Distribution and installers"
msgstr "crwdns14824:0crwdne14824:0"

#: ../../dev/building.rst:4
msgid "The Kolibri Package build pipeline looks like this::"
msgstr "crwdns14825:0crwdne14825:0"

#: ../../dev/building.rst:28
msgid "Make targets"
msgstr "crwdns14826:0crwdne14826:0"

#: ../../dev/building.rst:30
msgid "To build both the slim Kolibri and the one with bundled dependencies, simply run `make dist`. The `.whl` files will now be available in `dist/*whl` and you can install them with `pip install dist/filename.whl`."
msgstr "crwdns14827:0crwdne14827:0"

#: ../../dev/building.rst:35
msgid "Automated CI tests"
msgstr "crwdns14828:0crwdne14828:0"

#: ../../dev/building.rst:37
msgid "If you add `[ setup ]` to your commit message, our CI will automatically test that builds work."
msgstr "crwdns14829:0crwdne14829:0"

#: ../../dev/building.rst:40
msgid "Otherwise, changes to certain files like `requirements/*` and `setup.py` will automatically prompt test builds to fire."
msgstr "crwdns14830:0crwdne14830:0"

#: ../../dev/content.rst:2
msgid "Content"
msgstr "crwdns14831:0crwdne14831:0"

#: ../../dev/content.rst:4
msgid "This is a core module found in ``kolibri/Content``."
msgstr "crwdns14832:0crwdne14832:0"

#: ../../dev/content.rst:16 ../../dev/logger.rst:14 ../../dev/uap.rst:14
msgid "Models"
msgstr "crwdns14833:0crwdne14833:0"

#: kolibri.content.models:1 of
msgid "This is one of the Kolibri core components, the abstract layer of all contents. To access it, please use the public APIs in api.py"
msgstr "crwdns14834:0crwdne14834:0"

#: kolibri.content.models:4 of
msgid "The ONLY public object is ContentNode"
msgstr "crwdns14835:0crwdne14835:0"

#: kolibri.content.models.ChannelMetadata:1 of
msgid "This class stores the channel metadata within the content database itself."
msgstr "crwdns14836:0crwdne14836:0"

#: kolibri.auth.models.AbstractFacilityDataModel kolibri.auth.models.Classroom
#: kolibri.auth.models.Collection kolibri.auth.models.Collection.add_member
#: kolibri.auth.models.Collection.add_role
#: kolibri.auth.models.Collection.remove_member
#: kolibri.auth.models.Collection.remove_role kolibri.auth.models.DeviceOwner
#: kolibri.auth.models.Facility kolibri.auth.models.FacilityDataset
#: kolibri.auth.models.FacilityUser kolibri.auth.models.KolibriAbstractBaseUser
#: kolibri.auth.models.KolibriAbstractBaseUser.can_create
#: kolibri.auth.models.KolibriAbstractBaseUser.can_create_instance
#: kolibri.auth.models.KolibriAbstractBaseUser.can_delete
#: kolibri.auth.models.KolibriAbstractBaseUser.can_read
#: kolibri.auth.models.KolibriAbstractBaseUser.can_update
#: kolibri.auth.models.KolibriAbstractBaseUser.filter_readable
#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_collection
#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_user
#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_collection
#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_user
#: kolibri.auth.models.KolibriAbstractBaseUser.is_member_of
#: kolibri.auth.models.KolibriAnonymousUser kolibri.auth.models.LearnerGroup
#: kolibri.auth.models.Membership kolibri.auth.models.Role
#: kolibri.content.models.ChannelMetadata
#: kolibri.content.models.ChannelMetadataAbstractBase
#: kolibri.content.models.ChannelMetadataCache
#: kolibri.content.models.ContentNode kolibri.content.models.ContentTag
#: kolibri.content.models.File kolibri.content.models.Language
#: kolibri.content.models.License kolibri.logger.models.AttemptLog
#: kolibri.logger.models.ContentRatingLog
#: kolibri.logger.models.ContentSessionLog
#: kolibri.logger.models.ContentSummaryLog kolibri.logger.models.MasteryLog
#: kolibri.logger.models.UserSessionLog of
msgid "Parameters"
msgstr "crwdns14837:0crwdne14837:0"

#: kolibri.auth.models.Classroom:1 kolibri.auth.models.Collection:6
#: kolibri.auth.models.DeviceOwner:11 kolibri.auth.models.Facility:1
#: kolibri.auth.models.FacilityDataset:5 kolibri.auth.models.FacilityUser:4
#: kolibri.auth.models.LearnerGroup:1 kolibri.auth.models.Membership:6
#: kolibri.auth.models.Role:6 kolibri.content.models.ChannelMetadata:3
#: kolibri.content.models.ChannelMetadataAbstractBase:3
#: kolibri.content.models.ChannelMetadataCache:3
#: kolibri.content.models.ContentNode:4 kolibri.content.models.ContentTag:1
#: kolibri.content.models.File:4 kolibri.content.models.Language:1
#: kolibri.content.models.License:3 kolibri.logger.models.AttemptLog:4
#: kolibri.logger.models.ContentRatingLog:3
#: kolibri.logger.models.ContentSessionLog:3
#: kolibri.logger.models.ContentSummaryLog:3 kolibri.logger.models.MasteryLog:3
#: kolibri.logger.models.UserSessionLog:3 of
msgid "Id"
msgstr "crwdns14838:0crwdne14838:0"

#: kolibri.auth.models.Classroom:5 kolibri.auth.models.Collection:10
#: kolibri.auth.models.Facility:5 kolibri.auth.models.LearnerGroup:5
#: kolibri.content.models.ChannelMetadata:5
#: kolibri.content.models.ChannelMetadataAbstractBase:5
#: kolibri.content.models.ChannelMetadataCache:5 of
msgid "Name"
msgstr "crwdns14839:0crwdne14839:0"

#: kolibri.auth.models.FacilityDataset:7
#: kolibri.content.models.ChannelMetadata:7
#: kolibri.content.models.ChannelMetadataAbstractBase:7
#: kolibri.content.models.ChannelMetadataCache:7
#: kolibri.content.models.ContentNode:14 of
msgid "Description"
msgstr "crwdns14840:0crwdne14840:0"

#: kolibri.content.models.ChannelMetadata:9
#: kolibri.content.models.ChannelMetadataAbstractBase:9
#: kolibri.content.models.ChannelMetadataCache:9
#: kolibri.content.models.ContentNode:20 of
msgid "Author"
msgstr "crwdns14841:0crwdne14841:0"

#: kolibri.content.models.ChannelMetadata:11
#: kolibri.content.models.ChannelMetadataAbstractBase:11
#: kolibri.content.models.ChannelMetadataCache:11 of
msgid "Version"
msgstr "crwdns14842:0crwdne14842:0"

#: kolibri.content.models.ChannelMetadata:13
#: kolibri.content.models.ChannelMetadataAbstractBase:13
#: kolibri.content.models.ChannelMetadataCache:13
#: kolibri.content.models.File:22 of
msgid "Thumbnail"
msgstr "crwdns14843:0crwdne14843:0"

#: kolibri.content.models.ChannelMetadata:15
#: kolibri.content.models.ChannelMetadataAbstractBase:15
#: kolibri.content.models.ChannelMetadataCache:15 of
msgid "Root pk"
msgstr "crwdns14844:0crwdne14844:0"

#: kolibri.content.models.ChannelMetadataAbstractBase:1 of
msgid "Holds metadata about all existing content databases that exist locally."
msgstr "crwdns14845:0crwdne14845:0"

#: kolibri.content.models.ChannelMetadataCache:1 of
msgid "This class stores the channel metadata cached/denormed into the primary database."
msgstr "crwdns14846:0crwdne14846:0"

#: kolibri.content.models.ContentDatabaseModel:1 of
msgid "All models that exist in content databases (rather than in the default database) should inherit from this class."
msgstr "crwdns14847:0crwdne14847:0"

#: kolibri.content.models.ContentNode:1 of
msgid "The top layer of the contentDB schema, defines the most common properties that are shared across all different contents. Things it can represent are, for example, video, exercise, audio or document..."
msgstr "crwdns14848:0crwdne14848:0"

#: kolibri.auth.models.Classroom:7 kolibri.auth.models.Collection:12
#: kolibri.auth.models.Facility:7 kolibri.auth.models.LearnerGroup:7
#: kolibri.content.models.ContentNode:6 of
msgid "Parent"
msgstr "crwdns14849:0crwdne14849:0"

#: kolibri.content.models.ContentNode:8 of
msgid "License"
msgstr "crwdns14850:0crwdne14850:0"

#: kolibri.content.models.ContentNode:10 of
msgid "Title"
msgstr "crwdns14851:0crwdne14851:0"

#: kolibri.content.models.ContentNode:12
#: kolibri.logger.models.ContentRatingLog:9
#: kolibri.logger.models.ContentSessionLog:9
#: kolibri.logger.models.ContentSummaryLog:9 of
msgid "Content id"
msgstr "crwdns14852:0crwdne14852:0"

#: kolibri.content.models.ContentNode:16 of
msgid "Sort order"
msgstr "crwdns14853:0crwdne14853:0"

#: kolibri.content.models.ContentNode:18 of
msgid "License owner"
msgstr "crwdns14854:0crwdne14854:0"

#: kolibri.auth.models.Classroom:9 kolibri.auth.models.Collection:14
#: kolibri.auth.models.Facility:9 kolibri.auth.models.LearnerGroup:9
#: kolibri.auth.models.Role:14 kolibri.content.models.ContentNode:22
#: kolibri.logger.models.ContentSessionLog:21
#: kolibri.logger.models.ContentSummaryLog:23 of
msgid "Kind"
msgstr "crwdns14855:0crwdne14855:0"

#: kolibri.content.models.ContentNode:24 kolibri.content.models.File:10 of
msgid "Available"
msgstr "crwdns14856:0crwdne14856:0"

#: kolibri.content.models.ContentNode:26 of
msgid "Stemmed metaphone"
msgstr "crwdns14857:0crwdne14857:0"

#: kolibri.auth.models.Classroom:11 kolibri.auth.models.Collection:16
#: kolibri.auth.models.Facility:11 kolibri.auth.models.LearnerGroup:11
#: kolibri.content.models.ContentNode:28 of
msgid "Lft"
msgstr "crwdns14858:0crwdne14858:0"

#: kolibri.auth.models.Classroom:13 kolibri.auth.models.Collection:18
#: kolibri.auth.models.Facility:13 kolibri.auth.models.LearnerGroup:13
#: kolibri.content.models.ContentNode:30 of
msgid "Rght"
msgstr "crwdns14859:0crwdne14859:0"

#: kolibri.auth.models.Classroom:15 kolibri.auth.models.Collection:20
#: kolibri.auth.models.Facility:15 kolibri.auth.models.LearnerGroup:15
#: kolibri.content.models.ContentNode:32 of
msgid "Tree id"
msgstr "crwdns14860:0crwdne14860:0"

#: kolibri.auth.models.Classroom:17 kolibri.auth.models.Collection:22
#: kolibri.auth.models.Facility:17 kolibri.auth.models.LearnerGroup:17
#: kolibri.content.models.ContentNode:34 of
msgid "Level"
msgstr "crwdns14861:0crwdne14861:0"

#: kolibri.content.models.ContentNode:36 of
msgid "Has prerequisite"
msgstr "crwdns14862:0crwdne14862:0"

#: kolibri.content.models.ContentNode:38 of
msgid "Related"
msgstr "crwdns14863:0crwdne14863:0"

#: kolibri.content.models.ContentNode:40 of
msgid "Tags"
msgstr "crwdns14864:0crwdne14864:0"

#: kolibri.content.models.ContentNode.get_descendant_content_ids:1 of
msgid "Retrieve a queryset of unique content_ids for non-topic content nodes that are descendants of this node."
msgstr "crwdns14865:0crwdne14865:0"

#: kolibri.content.models.ContentNode.get_descendant_kind_counts:1 of
msgid "Return a dict mapping content kinds to counts, indicating how many descendant nodes there are of that kind. (Note: descendant nodes with identical content_id's are only counted once)"
msgstr "crwdns14866:0crwdne14866:0"

#: kolibri.content.models.ContentQuerySet:1 of
msgid "Ensure proper database routing happens even when queryset is evaluated lazily outside of `using_content_database`."
msgstr "crwdns14867:0crwdne14867:0"

#: kolibri.content.models.ContentTag:3 of
msgid "Tag name"
msgstr "crwdns14868:0crwdne14868:0"

#: kolibri.content.models.File:1 of
msgid "The bottom layer of the contentDB schema, defines the basic building brick for content. Things it can represent are, for example, mp4, avi, mov, html, css, jpeg, pdf, mp3..."
msgstr "crwdns14869:0crwdne14869:0"

#: kolibri.content.models.File:6 of
msgid "Checksum"
msgstr "crwdns14870:0crwdne14870:0"

#: kolibri.content.models.File:8 of
msgid "Extension"
msgstr "crwdns14871:0crwdne14871:0"

#: kolibri.content.models.File:12 of
msgid "File size"
msgstr "crwdns14872:0crwdne14872:0"

#: kolibri.content.models.File:14 of
msgid "Contentnode"
msgstr "crwdns14873:0crwdne14873:0"

#: kolibri.content.models.File:16 of
msgid "Preset"
msgstr "crwdns14874:0crwdne14874:0"

#: kolibri.content.models.File:18 of
msgid "Lang"
msgstr "crwdns14875:0crwdne14875:0"

#: kolibri.content.models.File:20 of
msgid "Supplementary"
msgstr "crwdns14876:0crwdne14876:0"

#: kolibri.content.models.File:24 of
msgid "Priority"
msgstr "crwdns14877:0crwdne14877:0"

#: kolibri.content.models.File.get_download_filename:1 of
msgid "Return a valid filename to be downloaded as."
msgstr "crwdns14878:0crwdne14878:0"

#: kolibri.content.models.File.get_download_url:1 of
msgid "Return the download url."
msgstr "crwdns14879:0crwdne14879:0"

#: kolibri.content.models.File.get_preset:1 of
msgid "Return the preset."
msgstr "crwdns14880:0crwdne14880:0"

#: kolibri.content.models.File.get_storage_url:1 of
msgid "Return a url for the client side to retrieve the content file. The same url will also be exposed by the file serializer."
msgstr "crwdns14881:0crwdne14881:0"

#: kolibri.content.models.Language:3 of
msgid "Lang code"
msgstr "crwdns14882:0crwdne14882:0"

#: kolibri.content.models.Language:5 of
msgid "Lang subcode"
msgstr "crwdns14883:0crwdne14883:0"

#: kolibri.content.models.License:1 of
msgid "Normalize the license of ContentNode model"
msgstr "crwdns14884:0crwdne14884:0"

#: kolibri.content.models.License:5 of
msgid "License name"
msgstr "crwdns14885:0crwdne14885:0"

#: kolibri.content.models.UUIDField:1 of
msgid "Adaptation of Django's UUIDField, but with 32-char hex representation as Python representation rather than a UUID instance."
msgstr "crwdns14886:0crwdne14886:0"

#: ../../dev/content/api_endpoints.rst:2
msgid "API endpoints"
msgstr "crwdns14887:0crwdne14887:0"

#: ../../dev/content/api_endpoints.rst:4
msgid "request specific content:"
msgstr "crwdns14888:0crwdne14888:0"

#: ../../dev/content/api_endpoints.rst:8
msgid "search content:"
msgstr "crwdns14889:0crwdne14889:0"

#: ../../dev/content/api_endpoints.rst:12
msgid "request specific content with specified fields:"
msgstr "crwdns14890:0crwdne14890:0"

#: ../../dev/content/api_endpoints.rst:16
msgid "request paginated contents"
msgstr "crwdns14891:0crwdne14891:0"

#: ../../dev/content/api_endpoints.rst:20
msgid "request combines different usages"
msgstr "crwdns14892:0crwdne14892:0"

#: ../../dev/content/api_methods.rst:2
msgid "API Methods"
msgstr "crwdns14893:0crwdne14893:0"

#: kolibri.content.api.OptionalPageNumberPagination:1 of
msgid "Pagination class that allows for page number-style pagination, when requested. To activate, the `page_size` argument must be set. For example, to request the first 20 records: `?page_size=20&page=1`"
msgstr "crwdns14894:0crwdne14894:0"

#: ../../dev/content/concepts_and_definitions.rst:2
#: ../../dev/logger/concepts_and_definitions.rst:2
#: ../../dev/uap/concepts_and_definitions.rst:2
msgid "Concepts and Definitions"
msgstr "crwdns14895:0crwdne14895:0"

#: ../../dev/content/concepts_and_definitions.rst:5
#: ../../dev/content/implementation.rst:63
msgid "ContentNode"
msgstr "crwdns14896:0crwdne14896:0"

#: ../../dev/content/concepts_and_definitions.rst:7
msgid "High level abstraction for prepresenting different content kinds, such as Topic, Video, Audio, Exercise, Document, and can be easily extended to support new content kinds. With multiple ContentNode objects, it supports grouping, arranging them in tree structure, and symmetric and asymmetric relationship between two ContentNode objects."
msgstr "crwdns14897:0crwdne14897:0"

#: ../../dev/content/concepts_and_definitions.rst:10
#: ../../dev/content/implementation.rst:73
msgid "File"
msgstr "crwdns14898:0crwdne14898:0"

#: ../../dev/content/concepts_and_definitions.rst:12
msgid "A Django model that is used to store details about the source file, such as what language it supports, how big is the size, which format the file is and where to find the source file."
msgstr "crwdns14899:0crwdne14899:0"

#: ../../dev/content/concepts_and_definitions.rst:15
msgid "ContentDB Diagram"
msgstr "crwdns14900:0crwdne14900:0"

#: ../../dev/content/concepts_and_definitions.rst:19
msgid "**PK = Primary Key **FK = Foreign Key **M2M = ManyToManyField"
msgstr "crwdns14901:0crwdne14901:0"

#: ../../dev/content/concepts_and_definitions.rst:24
msgid "ContentTag"
msgstr "crwdns14902:0crwdne14902:0"

#: ../../dev/content/concepts_and_definitions.rst:26
msgid "This model is used to establish a filtering system for all ContentNode objects."
msgstr "crwdns14903:0crwdne14903:0"

#: ../../dev/content/concepts_and_definitions.rst:30
msgid "ChannelMetadata"
msgstr "crwdns14904:0crwdne14904:0"

#: ../../dev/content/concepts_and_definitions.rst:32
msgid "A Django model in each content database that stores the database readable names, description and author for each channel."
msgstr "crwdns14905:0crwdne14905:0"

#: ../../dev/content/concepts_and_definitions.rst:35
msgid "ChannelMetadataCache"
msgstr "crwdns14906:0crwdne14906:0"

#: ../../dev/content/concepts_and_definitions.rst:36
msgid "This class stores the channel metadata cached/denormed into the default database."
msgstr "crwdns14907:0crwdne14907:0"

#: ../../dev/content/implementation.rst:2
msgid "Implementation Details and Workflows"
msgstr "crwdns14908:0crwdne14908:0"

#: ../../dev/content/implementation.rst:4
msgid "To achieve using separate databases for each channel and being able to switch channels dynamically, the following data structure and utility functions have been implemented."
msgstr "crwdns14909:0crwdne14909:0"

#: ../../dev/content/implementation.rst:7
msgid "ContentDBRoutingMiddleware"
msgstr "crwdns14910:0crwdne14910:0"

#: ../../dev/content/implementation.rst:9
msgid "This middleware will be applied to every request, and will dynamically select a database based on the channel_id. If a channel ID was included in the URL, it will ensure the appropriate content DB is used for the duration of the request. (Note: `set_active_content_database` is thread-local, so this shouldn't interfere with other parallel requests.)"
msgstr "crwdns14911:0crwdne14911:0"

#: ../../dev/content/implementation.rst:12
msgid "For example, this is how the client side dynamically requests data from a specific channel:"
msgstr "crwdns14912:0crwdne14912:0"

#: ../../dev/content/implementation.rst:16
msgid "this will respond with all the contentnode data stored in database <channel_1_id>.sqlite3"
msgstr "crwdns14913:0crwdne14913:0"

#: ../../dev/content/implementation.rst:20
msgid "this will respond with all the contentnode data stored in database <channel_2_id>.sqlite3"
msgstr "crwdns14914:0crwdne14914:0"

#: ../../dev/content/implementation.rst:23
msgid "get_active_content_database"
msgstr "crwdns14915:0crwdne14915:0"

#: ../../dev/content/implementation.rst:25
msgid "A utility function to retrieve the temporary thread-local variable that `using_content_database` sets"
msgstr "crwdns14916:0crwdne14916:0"

#: ../../dev/content/implementation.rst:28
msgid "set_active_content_database"
msgstr "crwdns14917:0crwdne14917:0"

#: ../../dev/content/implementation.rst:30
msgid "A utility function to set the temporary thread-local variable"
msgstr "crwdns14918:0crwdne14918:0"

#: ../../dev/content/implementation.rst:33
msgid "using_content_database"
msgstr "crwdns14919:0crwdne14919:0"

#: ../../dev/content/implementation.rst:35
msgid "A decorator and context manager to do queries on a specific content DB."
msgstr "crwdns14920:0crwdne14920:0"

#: ../../dev/content/implementation.rst:37
msgid "Usage as a context manager:"
msgstr "crwdns14921:0crwdne14921:0"

#: ../../dev/content/implementation.rst:47
msgid "Usage as a decorator:"
msgstr "crwdns14922:0crwdne14922:0"

#: ../../dev/content/implementation.rst:58
msgid "ContentDBRouter"
msgstr "crwdns14923:0crwdne14923:0"

#: ../../dev/content/implementation.rst:60
msgid "A router that decides what content database to read from based on a thread-local variable."
msgstr "crwdns14924:0crwdne14924:0"

#: ../../dev/content/implementation.rst:65
msgid "``ContentNode`` is implemented as a Django model that inherits from two abstract classes, MPTTModel and ContentDatabaseModel. `django-mptt's MPTTModel <http://django-mptt.github.io/django-mptt/>`_, which allows for efficient traversal and querying of the ContentNode tree. ``ContentDatabaseModel`` is used as a marker so that the content_db_router knows to query against the content database only if the model inherits from ContentDatabaseModel."
msgstr "crwdns14925:0crwdne14925:0"

#: ../../dev/content/implementation.rst:70
msgid "The tree structure is established by the ``parent`` field that is a foreign key pointing to another ContentNode object. You can also create a symmetric relationship using the ``related`` field, or an asymmetric field using the ``is_prerequisite`` field."
msgstr "crwdns14926:0crwdne14926:0"

#: ../../dev/content/implementation.rst:75
msgid "The ``File`` model also inherits from ``ContentDatabaseModel``."
msgstr "crwdns14927:0crwdne14927:0"

#: ../../dev/content/implementation.rst:77
msgid "To find where the source file is located, the class method ``get_url`` uses the ``checksum`` field and ``settings.CONTENT_STORAGE_DIR`` to calculate the file path. Every source file is named based on its MD5 hash value (this value is also stored in the ``checksum`` field) and stored in a namespaced folder under the directory specified in ``settings.CONTENT_STORAGE_DIR``. Because it's likely to have thousands of content files, and some filesystems cannot handle a flat folder with a large number of files very well, we create namespaced subfolders to improve the performance. So the eventual file path would look something like:"
msgstr "crwdns14928:0crwdne14928:0"

#: ../../dev/content/implementation.rst:79
msgid "``/home/user/.kolibri/content/storage/9/8/9808fa7c560b9801acccf0f6cf74c3ea.mp4``"
msgstr "crwdns14929:0crwdne14929:0"

#: ../../dev/content/implementation.rst:81
msgid "As you can see, it is fine to store your content files outside of the kolibri project folder as long as you set the ``settings.CONTENT_STORAGE_DIR`` accordingly."
msgstr "crwdns14930:0crwdne14930:0"

#: ../../dev/content/implementation.rst:83
msgid "The front-end will then use the ``extension`` field to decide which content player should be used. When the ``supplementary`` field's value is ``True``, that means this File object isn't necessary and can display the content without it. For example, we will mark caption (subtitle) file as supplementary."
msgstr "crwdns14931:0crwdne14931:0"

#: ../../dev/content/implementation.rst:86
msgid "Content Constants"
msgstr "crwdns14932:0crwdne14932:0"

#: ../../dev/content/implementation.rst:88
msgid "A Python module that stores constants for the ``kind`` field in ContentNode model and the ``preset`` field and ``extension`` field in File model."
msgstr "crwdns14933:0crwdne14933:0"

#: ../../dev/content/implementation.rst:95
msgid "Workflows"
msgstr "crwdns14934:0crwdne14934:0"

#: ../../dev/content/implementation.rst:97
msgid "There are two workflows we currently designed to handle content UI rendering and content playback rendering"
msgstr "crwdns14935:0crwdne14935:0"

#: ../../dev/content/implementation.rst:99
msgid "Content UI Rendering"
msgstr "crwdns14936:0crwdne14936:0"

#: ../../dev/content/implementation.rst:101
#: ../../dev/content/implementation.rst:110
msgid "Start with a ContentNode object."
msgstr "crwdns14937:0crwdne14937:0"

#: ../../dev/content/implementation.rst:102
msgid "Get the associated File object that has the ``thumbnail`` field being True."
msgstr "crwdns14938:0crwdne14938:0"

#: ../../dev/content/implementation.rst:103
msgid "Get the thumbnail image by calling this File's ``get_url`` method."
msgstr "crwdns14939:0crwdne14939:0"

#: ../../dev/content/implementation.rst:104
msgid "Determine the template using the ``kind`` field of this ContentNode object."
msgstr "crwdns14940:0crwdne14940:0"

#: ../../dev/content/implementation.rst:105
msgid "Renders the template with the thumbnail image."
msgstr "crwdns14941:0crwdne14941:0"

#: ../../dev/content/implementation.rst:108
msgid "Content Playback Rendering"
msgstr "crwdns14942:0crwdne14942:0"

#: ../../dev/content/implementation.rst:111
msgid "Retrieve a queryset of associated File objects that are filtered by the preset."
msgstr "crwdns14943:0crwdne14943:0"

#: ../../dev/content/implementation.rst:112
msgid "Use the ``thumbnail`` field as a filter on this queryset to get the File object and call this File object's ``get_url`` method to get the source file (the thumbnail image)"
msgstr "crwdns14944:0crwdne14944:0"

#: ../../dev/content/implementation.rst:113
msgid "Use the ``supplementary`` field as a filter on this queryset to get the \"supplementary\" File objects, such as caption (subtitle), and call these File objects' ``get_url`` method to get the source files."
msgstr "crwdns14945:0crwdne14945:0"

#: ../../dev/content/implementation.rst:114
msgid "Use the ``supplementary`` field as a filter on this queryset to get the essential File object. Call its ``get_url`` method to get the source file and use its ``extension`` field to choose the content player."
msgstr "crwdns14946:0crwdne14946:0"

#: ../../dev/content/implementation.rst:115
msgid "Play the content."
msgstr "crwdns14947:0crwdne14947:0"

#: ../../dev/conventions.rst:2
msgid "Project Conventions"
msgstr "crwdns14948:0crwdne14948:0"

#: ../../dev/conventions.rst:4
msgid "*TODO*"
msgstr "crwdns14949:0crwdne14949:0"

#: ../../dev/conventions.rst:8
msgid "Documentation"
msgstr "crwdns14950:0crwdne14950:0"

#: ../../dev/conventions.rst:10
msgid "*reStructuredText, docstrings, requirements for PRs to master...*"
msgstr "crwdns14951:0crwdne14951:0"

#: ../../dev/conventions.rst:14
msgid "Git Workflow"
msgstr "crwdns14952:0crwdne14952:0"

#: ../../dev/conventions.rst:16
msgid "*stable master, develop, feature branches, tags, releases, hot fixes, internal vs external repos...*"
msgstr "crwdns14953:0crwdne14953:0"

#: ../../dev/conventions.rst:20
msgid "Python Code"
msgstr "crwdns14954:0crwdne14954:0"

#: ../../dev/conventions.rst:22
msgid "*PEP8, additional conventions and best practices...*"
msgstr "crwdns14955:0crwdne14955:0"

#: ../../dev/conventions.rst:26
msgid "Vue.js Components"
msgstr "crwdns14956:0crwdne14956:0"

#: ../../dev/conventions.rst:28
msgid "Note that the top-level tags of `Vue.js components <https://vuejs.org/guide/components.html>`_ are ``<template>``, ``<script>``, and ``<style>``."
msgstr "crwdns14957:0crwdne14957:0"

#: ../../dev/conventions.rst:30
msgid "Whitespace"
msgstr "crwdns14958:0crwdne14958:0"

#: ../../dev/conventions.rst:32
msgid "an indent is 2 spaces"
msgstr "crwdns14959:0crwdne14959:0"

#: ../../dev/conventions.rst:33
msgid "two blank lines between top-level tags"
msgstr "crwdns14960:0crwdne14960:0"

#: ../../dev/conventions.rst:34
msgid "one blank line of padding within a top-level tag"
msgstr "crwdns14961:0crwdne14961:0"

#: ../../dev/conventions.rst:35
msgid "one level of indent for the contents of all top-level tags"
msgstr "crwdns14962:0crwdne14962:0"

#: ../../dev/conventions.rst:37
msgid "Keep most child-components stateless. In practice, this means using ``props`` but not ``data``."
msgstr "crwdns14963:0crwdne14963:0"

#: ../../dev/conventions.rst:39
msgid "Avoid using Vue.js' camelCase-to-kebab-case mapping. Instead, use square brackets and strings to reference names."
msgstr "crwdns14964:0crwdne14964:0"

#: ../../dev/conventions.rst:41
msgid "Use ``scoped`` styles where ever possible"
msgstr "crwdns14965:0crwdne14965:0"

#: ../../dev/conventions.rst:43
msgid "Name custom tags using kebab-case"
msgstr "crwdns14966:0crwdne14966:0"

#: ../../dev/conventions.rst:45
msgid "Components are placed in the *vue* directory. The root component file is called *vue/index.vue*, and is mounted on a tag called ``<rootvue>``."
msgstr "crwdns14967:0crwdne14967:0"

#: ../../dev/conventions.rst:47
msgid "Components are defined either as a file with a ``.vue`` extension (*my-component.vue*) or as a directory with an *index.vue* file (*my-component/index.vue*). Both forms can be used with ``require('my-component')``."
msgstr "crwdns14968:0crwdne14968:0"

#: ../../dev/conventions.rst:49
msgid "Put child components inside the directory of a parent component if they are *only* used by the parent. Otherwise, put shared child components in the *vue* director."
msgstr "crwdns14969:0crwdne14969:0"

#: ../../dev/conventions.rst:51
msgid "Any user visisble interface text should be rendered translatable, see :doc:`i18n` for details."
msgstr "crwdns14970:0:doc:crwdne14970:0"

#: ../../dev/conventions.rst:55
msgid "JavaScript Code"
msgstr "crwdns14971:0crwdne14971:0"

#: ../../dev/conventions.rst:57
msgid "We use the `AirBnB Javascript Style guide <https://github.com/airbnb/javascript>`_ for client-side ES6 code in Vue components."
msgstr "crwdns14972:0crwdne14972:0"

#: ../../dev/conventions.rst:58
msgid "``use strict`` is automatically inserted."
msgstr "crwdns14973:0crwdne14973:0"

#: ../../dev/conventions.rst:59
msgid "Use CommonJS-style ``require`` and ``module.exports`` statements, not ES6 ``import``/``export`` statements."
msgstr "crwdns14974:0crwdne14974:0"

#: ../../dev/conventions.rst:60
msgid "For logging statements we use a thin wrapper around the ``log-level`` JS library, that prefixes the log statements with information about the logging level and current file. To access the logger, simply include the following code snippet:"
msgstr "crwdns14975:0crwdne14975:0"

#: ../../dev/conventions.rst:68
msgid "Stylus and CSS"
msgstr "crwdns14976:0crwdne14976:0"

#: ../../dev/conventions.rst:70
msgid "clear out unused styles"
msgstr "crwdns14977:0crwdne14977:0"

#: ../../dev/conventions.rst:71
msgid "avoid using classes as JS identifiers, and prefix with ``js-`` if necessary"
msgstr "crwdns14978:0crwdne14978:0"

#: ../../dev/conventions.rst:75
msgid "HTML"
msgstr "crwdns14979:0crwdne14979:0"

#: ../../dev/conventions.rst:77
msgid "*attribute lists, semantic structure, accessibility...*"
msgstr "crwdns14980:0crwdne14980:0"

#: ../../dev/files.rst:2
msgid "Files and Directories"
msgstr "crwdns14981:0crwdne14981:0"

#: ../../dev/files.rst:6
msgid ".cache/..."
msgstr "crwdns14982:0crwdne14982:0"

#: ../../dev/files.rst:6
msgid "Testing-related, and ignored by git. *TODO - what does it contain?*"
msgstr "crwdns14983:0crwdne14983:0"

#: ../../dev/files.rst:9
msgid ".eggs/..."
msgstr "crwdns14984:0crwdne14984:0"

#: ../../dev/files.rst:9 ../../dev/files.rst:22 ../../dev/files.rst:25
msgid "Packaging-related, and ignored by git. *TODO - what does it contain?*"
msgstr "crwdns14985:0crwdne14985:0"

#: ../../dev/files.rst:12
msgid ".github/..."
msgstr "crwdns14986:0crwdne14986:0"

#: ../../dev/files.rst:12
msgid "These are `files used by GitHub <https://help.github.com/articles/helping-people-contribute-to-your-project/>`_ to generate templates for things like new pull requests and issues."
msgstr "crwdns14987:0crwdne14987:0"

#: ../../dev/files.rst:19
msgid ".tox/..."
msgstr "crwdns14988:0crwdne14988:0"

#: ../../dev/files.rst:15
msgid "`Tox <https://tox.readthedocs.io/en/latest/>`_ is a tool for testing software in a range of environments - for example using different versions of Python and Node."
msgstr "crwdns14989:0crwdne14989:0"

#: ../../dev/files.rst:17
msgid "This directory is ignored by git."
msgstr "crwdns14990:0crwdne14990:0"

#: ../../dev/files.rst:19
msgid "*TODO - what does it contain?*"
msgstr "crwdns14991:0crwdne14991:0"

#: ../../dev/files.rst:22
msgid "dist-packages-cache"
msgstr "crwdns14992:0crwdne14992:0"

#: ../../dev/files.rst:25
msgid "dist-packages-temp"
msgstr "crwdns14993:0crwdne14993:0"

#: ../../dev/files.rst:28
msgid "docs/..."
msgstr "crwdns14994:0crwdne14994:0"

#: ../../dev/files.rst:28
msgid "reStructuredText-based documentation, along with `Sphinx-based build code <http://www.sphinx-doc.org/en/stable/>`_"
msgstr "crwdns14995:0crwdne14995:0"

#: ../../dev/files.rst:31
msgid "frontend_build/..."
msgstr "crwdns14996:0crwdne14996:0"

#: ../../dev/files.rst:31
msgid "Code for integrating Kolibri's plugin system with `webpack <https://webpack.github.io/>`_ instrumentation for bundling client-side dependencies."
msgstr "crwdns14997:0crwdne14997:0"

#: ../../dev/files.rst:34
msgid "karma_config/..."
msgstr "crwdns14998:0crwdne14998:0"

#: ../../dev/files.rst:34
msgid "Configuration for `Karma <https://karma-runner.github.io/0.13/index.html>`_, our client-side unit test framework"
msgstr "crwdns14999:0crwdne14999:0"

#: ../../dev/files.rst:37
msgid "kolibri/..."
msgstr "crwdns15000:0crwdne15000:0"

#: ../../dev/files.rst:37
msgid "main code-base, a Django application"
msgstr "crwdns15001:0crwdne15001:0"

#: ../../dev/files.rst:40
msgid "requirements/..."
msgstr "crwdns15002:0crwdne15002:0"

#: ../../dev/files.rst:40
msgid "Python `dependency files <https://pip.pypa.io/en/stable/user_guide/#requirements-files>`_ for PIP"
msgstr "crwdns15003:0crwdne15003:0"

#: ../../dev/files.rst:43
msgid "test/..."
msgstr "crwdns15004:0crwdne15004:0"

#: ../../dev/files.rst:43
msgid "helper files for running tests in `Travic CI <https://travis-ci.org/>`_ *TODO - is this correct?*"
msgstr "crwdns15005:0crwdne15005:0"

#: ../../dev/files.rst:46
msgid ".editorconfig"
msgstr "crwdns15006:0crwdne15006:0"

#: ../../dev/files.rst:46
msgid "general `editor configuration file <http://editorconfig.org/>`_"
msgstr "crwdns15007:0crwdne15007:0"

#: ../../dev/files.rst:49
msgid ".eslintrc.js"
msgstr "crwdns15008:0crwdne15008:0"

#: ../../dev/files.rst:49
msgid "configuration file for `ESLint <http://eslint.org/>`_, our client-side javascript linter"
msgstr "crwdns15009:0crwdne15009:0"

#: ../../dev/files.rst:52
msgid ".gitignore"
msgstr "crwdns15010:0crwdne15010:0"

#: ../../dev/files.rst:52
msgid "standard `.gitignore file <https://git-scm.com/docs/gitignore>`_"
msgstr "crwdns15011:0crwdne15011:0"

#: ../../dev/files.rst:55
msgid ".htmlhintrc"
msgstr "crwdns15012:0crwdne15012:0"

#: ../../dev/files.rst:55
msgid "configuration for our HTML linter, `HTMLHint <http://htmlhint.com/>`_"
msgstr "crwdns15013:0crwdne15013:0"

#: ../../dev/files.rst:58
msgid ".pre-commit-config.yaml"
msgstr "crwdns15014:0crwdne15014:0"

#: ../../dev/files.rst:58
msgid "configuration for our `pre-commit <http://pre-commit.com/>`_ hooks"
msgstr "crwdns15015:0crwdne15015:0"

#: ../../dev/files.rst:61
msgid ".stylintrc"
msgstr "crwdns15016:0crwdne15016:0"

#: ../../dev/files.rst:61
msgid "configuration for our `Stylus <http://stylus-lang.com/>`_ linter, `Stylint <https://rosspatton.github.io/stylint/>`_"
msgstr "crwdns15017:0crwdne15017:0"

#: ../../dev/files.rst:64
msgid ".travis.yml"
msgstr "crwdns15018:0crwdne15018:0"

#: ../../dev/files.rst:64
msgid "configuration for `Travis <https://docs.travis-ci.com/user/customizing-the-build/>`_"
msgstr "crwdns15019:0crwdne15019:0"

#: ../../dev/files.rst:67
msgid "AUTHORS.rst, CHANGELOG.rst, CONTRIBUTING.rst"
msgstr "crwdns15020:0crwdne15020:0"

#: ../../dev/files.rst:67
msgid "reStructuredText-formatted files. Also imported by the generated */docs*"
msgstr "crwdns15021:0crwdne15021:0"

#: ../../dev/files.rst:70
msgid "LICENSE"
msgstr "crwdns15022:0crwdne15022:0"

#: ../../dev/files.rst:70
msgid "plain-text license files"
msgstr "crwdns15023:0crwdne15023:0"

#: ../../dev/files.rst:73
msgid "Makefile"
msgstr "crwdns15024:0crwdne15024:0"

#: ../../dev/files.rst:73
msgid "wrapper for some scripts, including building packages and docs"
msgstr "crwdns15025:0crwdne15025:0"

#: ../../dev/files.rst:76
msgid "MANIFEST.in"
msgstr "crwdns15026:0crwdne15026:0"

#: ../../dev/files.rst:76
msgid "list of non-python files to include in the Python package"
msgstr "crwdns15027:0crwdne15027:0"

#: ../../dev/files.rst:79
msgid "package.json"
msgstr "crwdns15028:0crwdne15028:0"

#: ../../dev/files.rst:79
msgid "javascript dependencies, helper scripts, and configuration"
msgstr "crwdns15029:0crwdne15029:0"

#: ../../dev/files.rst:82
msgid "pytest.bdd.ini, pytest.ini"
msgstr "crwdns15030:0crwdne15030:0"

#: ../../dev/files.rst:82
msgid "configuration files for `pytest <http://pytest.org/latest/>`_"
msgstr "crwdns15031:0crwdne15031:0"

#: ../../dev/files.rst:85
msgid "pytest_runner-2.7.1-py2.7.egg"
msgstr "crwdns15032:0crwdne15032:0"

#: ../../dev/files.rst:85 ../../dev/files.rst:94
msgid "?"
msgstr "crwdns15033:0crwdne15033:0"

#: ../../dev/files.rst:88
msgid "README.rst"
msgstr "crwdns15034:0crwdne15034:0"

#: ../../dev/files.rst:88
msgid "reStructuredText-formatted file readme"
msgstr "crwdns15035:0crwdne15035:0"

#: ../../dev/files.rst:91
msgid "requirements.txt"
msgstr "crwdns15036:0crwdne15036:0"

#: ../../dev/files.rst:91
msgid "Python PIP dependency requirements, simply redirects to *requirements/base.txt*"
msgstr "crwdns15037:0crwdne15037:0"

#: ../../dev/files.rst:94
msgid "setup.cfg"
msgstr "crwdns15038:0crwdne15038:0"

#: ../../dev/files.rst:97
msgid "setup.py"
msgstr "crwdns15039:0crwdne15039:0"

#: ../../dev/files.rst:97
msgid "configuration for Python package related to `setuptools <https://pythonhosted.org/an_example_pypi_project/setuptools.html>`_"
msgstr "crwdns15040:0crwdne15040:0"

#: ../../dev/files.rst:102
msgid "tox.ini"
msgstr "crwdns15041:0crwdne15041:0"

#: ../../dev/files.rst:100
msgid "configuration for our `Tox test environments <https://tox.readthedocs.io/en/latest/>`_"
msgstr "crwdns15042:0crwdne15042:0"

#: ../../dev/frontend.rst:3
msgid "Front-end Architecture"
msgstr "crwdns15043:0crwdne15043:0"

#: ../../dev/frontend.rst:7
msgid "Components"
msgstr "crwdns15044:0crwdne15044:0"

#: ../../dev/frontend.rst:9
msgid "We leverage `Vue.js components <https://vuejs.org/guide/components.html>`_ as the primary building blocks for our UI. For general UI development work, this is the most common tool a developer will use. It would be prudent to read through the `Vue.js guide <https://vuejs.org/guide/>`_ thoroughly."
msgstr "crwdns15045:0crwdne15045:0"

#: ../../dev/frontend.rst:11
msgid "Each component contains HTML with dynamic Vue.js directives, styling which is scoped to that component (written using `Stylus <http://stylus-lang.com/>`_), and logic which is also scoped to that component (all code, including that in Vue components should be written using `Bublé compatible ES2015 JavaScript <https://buble.surge.sh/guide/#supported-features>`_). Non-scoped styles can also be added, but these should be carefully namespaced."
msgstr "crwdns15046:0crwdne15046:0"

#: ../../dev/frontend.rst:13
msgid "Components allow us to define new custom tags that encapsulate a piece of self-contained, re-usable UI functionality. When composed together, they form a tree structure of parents and children. Each component has a well-defined interface used by its parent component, made up of `input properties <https://vuejs.org/guide/components.html#Props>`_, `events <https://vuejs.org/guide/components.html#Custom-Events>`_ and `content slots <https://vuejs.org/guide/components.html#Content-Distribution-with-Slots>`_. Components should never reference their parent."
msgstr "crwdns15047:0crwdne15047:0"

#: ../../dev/frontend.rst:15
msgid "Read through :doc:`conventions` for some important consistency tips on writing new components."
msgstr "crwdns15048:0:doc:crwdne15048:0"

#: ../../dev/frontend.rst:19
msgid "Layout of Frontend Code"
msgstr "crwdns15049:0crwdne15049:0"

#: ../../dev/frontend.rst:21
msgid "Front-end code and assets are generally contained in one of two places: either in one of the plugin subdirectories (under *kolibri/plugins*) or in *kolibri/core*, which contains code shared across all plugins as described below."
msgstr "crwdns15050:0crwdne15050:0"

#: ../../dev/frontend.rst:23
msgid "Within these directories, there should be an *assets* directory with *src* and *test* under it. Most assets will go in *src*, and tests for the components will go in *test*."
msgstr "crwdns15051:0crwdne15051:0"

#: ../../dev/frontend.rst:25
msgid "For example:"
msgstr "crwdns15052:0crwdne15052:0"

#: ../../dev/frontend.rst:66
msgid "In the example above, the *vue/another-page/index.vue* file in *learn* can use other assets in the same directory (such as *child.vue*), components in *vue* (such as *shared.vue*), and assets in core (such as variables in *core-theme.styl*). However it cannot use files in other plugin directories (such as *management*)."
msgstr "crwdns15053:0crwdne15053:0"

#: ../../dev/frontend.rst:70
msgid "For many development scenarios, only files in these directories need to be touched."
msgstr "crwdns15054:0crwdne15054:0"

#: ../../dev/frontend.rst:72
msgid "There is also a lot of logic and configuration relevant to front-end code loading, parsing, testing, and linting. This includes webpack, NPM, and integration with the plugin system. This is somewhat scattered, and includes logic in *frontend_build/...*, *package.json*, *kolibri/core/webpack/...*, and other locations. Much of this functionality is described in other sections of the docs (such as :doc:`asset_loading`), but it can take some time to understand how it all hangs together."
msgstr "crwdns15055:0:doc:crwdne15055:0"

#: ../../dev/frontend.rst:76
msgid "SVG Icons"
msgstr "crwdns15056:0crwdne15056:0"

#: ../../dev/frontend.rst:78
msgid "SVGs can be inlined into Vue components using a special syntax:"
msgstr "crwdns15057:0crwdne15057:0"

#: ../../dev/frontend.rst:85
msgid "Then, if there is a file called ``icon.svg`` in the same directory, that file will be inserted directly into the outputted HTML. This allows aspects of the icon (e.g. fill) to be styled using CSS."
msgstr "crwdns15058:0crwdne15058:0"

#: ../../dev/frontend.rst:87
msgid "Attributes (such as vue directives like ``v-if`` and SVG attributes like ``viewbox``) can also be added to the svg tag."
msgstr "crwdns15059:0crwdne15059:0"

#: ../../dev/frontend.rst:91
msgid "Single-page Apps"
msgstr "crwdns15060:0crwdne15060:0"

#: ../../dev/frontend.rst:93
msgid "The Kolibri front-end is made of a few high-level \"app\" plugins, which are single-page JS applications (conventionally *app.js*) with their own base URL and a single root Vue.js component. Examples of apps are 'Learn' and 'User Management', as shown in the example above. Apps are independent of each other, and can only reference components and styles from within themselves and from core."
msgstr "crwdns15061:0crwdne15061:0"

#: ../../dev/frontend.rst:95
msgid "Each app is implemented as a Kolibri plugin and is defined in a subdirectory of *kolibri/plugins*."
msgstr "crwdns15062:0crwdne15062:0"

#: ../../dev/frontend.rst:97
msgid "On the Server-side, the ``kolibri_plugin.py`` file describes most of the configuration for the single-page app. In particular, this includes the base Django HTML template to return (with an empty ``<body>``), the URL at which the app is exposed, and the javascript entry file which is run on load."
msgstr "crwdns15063:0crwdne15063:0"

#: ../../dev/frontend.rst:99
msgid "On the client-side, the app creates a single ``KolibriModule`` object in the entry file (conventionally *app.js*) and registers this with the core app, a global variable called ``kolibriGlobal``. The Kolibri Module then mounts single root component to the HTML returned by the server, which recursively contains all additional components, html and logic."
msgstr "crwdns15064:0crwdne15064:0"

#: ../../dev/frontend.rst:103
msgid "Defining a New Kolibri Module"
msgstr "crwdns15065:0crwdne15065:0"

#: ../../dev/frontend.rst:107
msgid "This section is mostly relevant if you are creating a new app or plugin. If you are just creating new components, you don't need to do this."
msgstr "crwdns15066:0crwdne15066:0"

#: ../../dev/frontend.rst:109
msgid "A Kolibri Module is initially defined in Python by sub-classing the ``WebpackBundleHook`` class (in ``kolibri.core.webpack.hooks``). The hook defines the JS entry point (conventionally called *app.js*) where the ``KolibriModule`` subclass is instantiated, and where events and callbacks on the module are registered. These are defined in the ``events`` and ``once`` properties. Each defines key-value pairs of the name of an event, and the name of the method on the ``KolibriModule`` object. When these events are triggered on the Kolibri core JavaScript app, these callbacks will be called. (If the ``KolibriModule`` is registered for asynchronous loading, the Kolibri Module will first be loaded, and then the callbacks called when it is ready. See :doc:`asset_loading` for more information.)"
msgstr "crwdns15067:0:doc:crwdne15067:0"

#: ../../dev/frontend.rst:111
msgid "All apps should extend the ``KolibriModule`` class found in `kolibri/core/assets/src/kolibri_module.js`."
msgstr "crwdns15068:0crwdne15068:0"

#: ../../dev/frontend.rst:113
msgid "The ``ready`` method will be automatically executed once the Module is loaded and registered with the Kolibri Core App. By convention, JavaScript is injected into the served HTML *after* the ``<rootvue>`` tag, meaning that this tag should be available when the ``ready`` method is called, and the root component (conventionally in *vue/index.vue*) can be mounted here."
msgstr "crwdns15069:0crwdne15069:0"

#: ../../dev/frontend.rst:116
msgid "Content Renderers"
msgstr "crwdns15070:0crwdne15070:0"

#: ../../dev/frontend.rst:118
msgid "A special kind of Kolibri Module is dedicated to rendering particular content types. All content renderers should extend the ``ContentRendererModule`` class found in `kolibri/core/assets/src/content_renderer_module.js`. In addition, rather than subclassing the ``WebpackBundleHook`` class, content renderers should be defined in the Python code using the ``ContentRendererHook`` class defined in ``kolibri.content.hooks``. In addition to the standard options for the ``WebpackBundleHook``, the ``ContentRendererHook`` also accepts a json file defining the content types that it renders::"
msgstr "crwdns15071:0crwdne15071:0"

#: ../../dev/frontend.rst:123
msgid "Shared Core Functionality"
msgstr "crwdns15072:0crwdne15072:0"

#: ../../dev/frontend.rst:126
msgid "Kolibri provides a set of shared \"core\" functionality – including components, styles, and helper logic, and libraries – which can be re-used across apps and plugins."
msgstr "crwdns15073:0crwdne15073:0"

#: ../../dev/frontend.rst:129
msgid "JS Libraries"
msgstr "crwdns15074:0crwdne15074:0"

#: ../../dev/frontend.rst:131
msgid "The following libraries are available globally, in all module code:"
msgstr "crwdns15075:0crwdne15075:0"

#: ../../dev/frontend.rst:133
msgid "``vue`` - the Vue.js object"
msgstr "crwdns15076:0crwdne15076:0"

#: ../../dev/frontend.rst:134
msgid "``vuex`` - the Vuex object"
msgstr "crwdns15077:0crwdne15077:0"

#: ../../dev/frontend.rst:135
msgid "``logging`` - our wrapper around the `loglevel logging module <https://github.com/pimterry/loglevel>`_"
msgstr "crwdns15078:0crwdne15078:0"

#: ../../dev/frontend.rst:136
msgid "``core-base`` - a shared base Vue.js component (*core-base.vue*)"
msgstr "crwdns15079:0crwdne15079:0"

#: ../../dev/frontend.rst:138
msgid "And many others. The complete specification for commonly shared modules can be found in `kolibri/core/assets/src/core-app/apiSpec.js` - this object defines which modules are imported into the core object. If the module in question has the 'requireName' attribute set on the core specification, then it can be used in code with a standard CommonJS-style require statement - e.g.:"
msgstr "crwdns15080:0crwdne15080:0"

#: ../../dev/frontend.rst:145
msgid "Adding additional globally-available objects is relatively straightforward due to the `plugin and webpack build system <asset_loading>`_."
msgstr "crwdns15081:0crwdne15081:0"

#: ../../dev/frontend.rst:147
msgid "To expose something on the core app, add a key to the object in `apiSpec.js` which maps to an object with the following keys:"
msgstr "crwdns15082:0crwdne15082:0"

#: ../../dev/frontend.rst:155 ../../dev/frontend.rst:171
msgid "This module would now be available for import anywhere with the following statement:"
msgstr "crwdns15083:0crwdne15083:0"

#: ../../dev/frontend.rst:161
msgid "For better organisation of the Core API specification, modules can also be attached at arbitrarily nested paths:"
msgstr "crwdns15084:0crwdne15084:0"

#: ../../dev/frontend.rst:177
msgid "For convenience (and to prevent accidental imports), 3rd party (NPM) modules installed in node_modules can be required by their usual name also:"
msgstr "crwdns15085:0crwdne15085:0"

#: ../../dev/frontend.rst:184
msgid "Bootstrapped Data"
msgstr "crwdns15086:0crwdne15086:0"

#: ../../dev/frontend.rst:186
msgid "The ``kolibriGlobal`` object is also used to bootstrap data into the JS app, rather than making unnecessary API requests."
msgstr "crwdns15087:0crwdne15087:0"

#: ../../dev/frontend.rst:188
msgid "For example, we currently embellish the ``kolibriGlobal`` object with a ``urls`` object. This is defined by `Django JS Reverse <https://github.com/ierror/django-js-reverse>`_ and exposes Django URLs on the client side. This will primarily be used for accessing API Urls for synchronizing with the REST API. See the Django JS Reverse documentation for details on invoking the Url."
msgstr "crwdns15088:0crwdne15088:0"

#: ../../dev/frontend.rst:192
msgid "Styling"
msgstr "crwdns15089:0crwdne15089:0"

#: ../../dev/frontend.rst:194
msgid "For shared styles, two mechanisms are provided:"
msgstr "crwdns15090:0crwdne15090:0"

#: ../../dev/frontend.rst:196
msgid "The *core-theme.styl* file provides values for some globally-relevant Stylus variables. These variables can be used in any component's ``<style>`` block by adding the line ``@require '~core-theme.styl'``."
msgstr "crwdns15091:0crwdne15091:0"

#: ../../dev/frontend.rst:197
msgid "The *core-global.styl* file is always inserted into the ``<head>`` after normalize.css and provides some basic styling to global elements"
msgstr "crwdns15092:0crwdne15092:0"

#: ../../dev/frontend.rst:201
msgid "Additional Functionality"
msgstr "crwdns15093:0crwdne15093:0"

#: ../../dev/frontend.rst:203
msgid "These methods are also publicly exposed methods of the core app:"
msgstr "crwdns15094:0crwdne15094:0"

#: ../../dev/frontend.rst:214
msgid "Unit Testing"
msgstr "crwdns15095:0crwdne15095:0"

#: ../../dev/frontend.rst:216
msgid "Unit testing is carried out using `Mocha <https://mochajs.org/>`_. All JavaScript code should have unit tests for all object methods and functions."
msgstr "crwdns15096:0crwdne15096:0"

#: ../../dev/frontend.rst:218
msgid "Tests are written in JavaScript, and placed in the 'assets/test' folder. An example test is shown below:"
msgstr "crwdns15097:0crwdne15097:0"

#: ../../dev/frontend.rst:236
msgid "Vue.js components can also be tested. The management plugin contains an example (*kolibri/plugins/management/assets/test/management.js*) where the component is bound to a temporary DOM node, changes are made to the state, and assertions are made about the new component structure."
msgstr "crwdns15098:0crwdne15098:0"

#: ../../dev/frontend.rst:240
msgid "Adding Dependencies"
msgstr "crwdns15099:0crwdne15099:0"

#: ../../dev/frontend.rst:242
msgid "Dependencies are tracked using ``yarn`` - `see the docs here <https://yarnpkg.com/en/docs/>`_."
msgstr "crwdns15100:0crwdne15100:0"

#: ../../dev/frontend.rst:244
msgid "We distinguish development dependencies from runtime dependencies, and these should be installed as such using ``yarn add --dev [dep]`` or ``yarn add [dep]``, respectively. Your new dependency should now be recorded in *package.json*, and all of its dependencies should be recorded in *yarn.lock*."
msgstr "crwdns15101:0[dep]crwdnd15101:0[dep]crwdne15101:0"

#: ../../dev/frontend.rst:246
msgid "Individual plugins can also have their own package.json and yarn.lock for their own dependencies. Running ``yarn install`` will also install all the dependencies for each activated plugin (inside a node_modules folder inside the plugin itself). These dependencies will only be available to that plugin at build time. Dependencies for individual plugins should be added from within the root directory of that particular plugin."
msgstr "crwdns15102:0crwdne15102:0"

#: ../../dev/frontend.rst:248
msgid "To assist in tracking the source of bloat in our codebase, the command ``yarn run bundle-stats`` is available to give a full readout of the size that uglified packages take up in the final Javascript code."
msgstr "crwdns15103:0crwdne15103:0"

#: ../../dev/frontend.rst:250
msgid "In addition, a plugin can have its own webpack.config.js for plugin specific webpack configuration (loaders, plugins, etc.). These options will be merged with the base options using ``webpack-merge``."
msgstr "crwdns15104:0crwdne15104:0"

#: ../../dev/getting_started.rst:2
msgid "Getting started"
msgstr "crwdns15105:0crwdne15105:0"

#: ../../dev/getting_started.rst:4
msgid "First of all, thank you for your interest in contributing to Kolibri! The project was founded by volunteers dedicated to helping make educational materials more accessible to those in need, and every contribution makes a difference. The instructions below should get you up and running the code in no time!"
msgstr "crwdns15106:0crwdne15106:0"

#: ../../dev/getting_started.rst:7
msgid "Setting up Kolibri for development"
msgstr "crwdns15107:0crwdne15107:0"

#: ../../dev/getting_started.rst:9
msgid "Most of the steps below require entering commands into your Terminal (Linux, Mac) or command prompt (``cmd.exe`` on Windows) that you will learn how to use and become more comfortable with."
msgstr "crwdns15108:0crwdne15108:0"

#: ../../dev/getting_started.rst:12
msgid "In case you run into any problems during these steps, searching online is usually the fastest way out: whatever error you are seeing, chances are good that somebody alredy had it in the past and posted a solution somewhere... ;)"
msgstr "crwdns15109:0crwdne15109:0"

#: ../../dev/getting_started.rst:15
msgid "Git & GitHub"
msgstr "crwdns15110:0crwdne15110:0"

#: ../../dev/getting_started.rst:17
msgid "Install and set-up `Git <https://help.github.com/articles/set-up-git/>`_ on your computer. Try this `tutorial <http://learngitbranching.js.org/>`_ if you need more practice with Git!"
msgstr "crwdns15111:0crwdne15111:0"

#: ../../dev/getting_started.rst:18
msgid "`Sign up and configure your GitHub account <https://github.com/join>`_ if you don't have one already."
msgstr "crwdns15112:0crwdne15112:0"

#: ../../dev/getting_started.rst:19
msgid "`Fork the main Kolibri repository <https://github.com/learningequality/kolibri>`_. This will make it easier to `submit pull requests <https://help.github.com/articles/using-pull-requests/>`_. Read more details `about forking <https://help.github.com/articles/fork-a-repo/>`_ from GitHub."
msgstr "crwdns15113:0crwdne15113:0"

#: ../../dev/getting_started.rst:23
msgid "Install Environment Dependencies"
msgstr "crwdns15114:0crwdne15114:0"

#: ../../dev/getting_started.rst:25
msgid "Install `Python <https://www.python.org/downloads/windows/>`_ if you are on Windows, on Linux and OSX Python is preinstalled (recommended versions 2.7+ or 3.4+)."
msgstr "crwdns15115:0crwdne15115:0"

#: ../../dev/getting_started.rst:26
msgid "Install `pip <https://pypi.python.org/pypi/pip>`_ package installer."
msgstr "crwdns15116:0crwdne15116:0"

#: ../../dev/getting_started.rst:27
msgid "Install `Node <https://nodejs.org/en/>`_ (recommended version 4+)."
msgstr "crwdns15117:0crwdne15117:0"

#: ../../dev/getting_started.rst:28
msgid "Install Yarn according the `instructions specific for your OS <https://yarnpkg.com/en/docs/install/>`_."
msgstr "crwdns15118:0crwdne15118:0"

#: ../../dev/getting_started.rst:31
msgid "On Ubuntu install Node.js via `nvm <https://github.com/creationix/nvm>`_ to avoid build issues."
msgstr "crwdns15119:0crwdne15119:0"

#: ../../dev/getting_started.rst:32
msgid "On a Mac, you may want to consider using the `Homebrew <http://brew.sh/>`_ package manager."
msgstr "crwdns15120:0crwdne15120:0"

#: ../../dev/getting_started.rst:34
msgid "Ready for the fun part in the Terminal? Here we go!"
msgstr "crwdns15121:0crwdne15121:0"

#: ../../dev/getting_started.rst:38
msgid "Checking out the code"
msgstr "crwdns15122:0crwdne15122:0"

#: ../../dev/getting_started.rst:40
msgid "Make sure you `registered your SSH keys on GitHub <https://help.github.com/articles/generating-ssh-keys>`_."
msgstr "crwdns15123:0crwdne15123:0"

#: ../../dev/getting_started.rst:41
msgid "**Clone** your Kolibri fork to your local computer. In the following commands replace ``$USERNAME`` with your own GitHub username:"
msgstr "crwdns15124:0$USERNAMEcrwdne15124:0"

#: ../../dev/getting_started.rst:50
msgid "Enable syncing your local repository with **upstream**,  which refers to the Kolibri source from where you cloned your fork. That way you can keep it updated with the changes from the rest of Kolibri team contributors:"
msgstr "crwdns15125:0crwdne15125:0"

#: ../../dev/getting_started.rst:60
msgid "``develop`` is the active development branch - do not target the ``master`` branch."
msgstr "crwdns15126:0crwdne15126:0"

#: ../../dev/getting_started.rst:64
msgid "Virtual environment"
msgstr "crwdns15127:0crwdne15127:0"

#: ../../dev/getting_started.rst:66
msgid "It is best practice to use `Python virtual environment <https://virtualenv.pypa.io/en/latest/>`_ to isolate the dependencies of your Python projects from each other. This also allows you to avoid using ``sudo`` with ``pip``, which is not recommended."
msgstr "crwdns15128:0crwdne15128:0"

#: ../../dev/getting_started.rst:68
msgid "You can learn more about using `virtualenv <https://virtualenv.pypa.io/en/stable/userguide/>`_, or follow these basic instructions:"
msgstr "crwdns15129:0crwdne15129:0"

#: ../../dev/getting_started.rst:70
msgid "Initial setup, performed once:"
msgstr "crwdns15130:0crwdne15130:0"

#: ../../dev/getting_started.rst:81
msgid "We create the virtualenv `outside` of the Kolibri project folder. You can choose another location than ``~/.venvs/kolibri`` if desired."
msgstr "crwdns15131:0crwdne15131:0"

#: ../../dev/getting_started.rst:83
msgid "To activate the virtualenv in a standard Bash shell:"
msgstr "crwdns15132:0crwdne15132:0"

#: ../../dev/getting_started.rst:89
msgid "Now, any commands run with ``pip`` will target your virtualenv rather than the global Python installation."
msgstr "crwdns15133:0crwdne15133:0"

#: ../../dev/getting_started.rst:91
msgid "To deactivate the virtualenv, run the command below. Note, you'll want to leave it activated for the remainder of project setup!"
msgstr "crwdns15134:0crwdne15134:0"

#: ../../dev/getting_started.rst:100
msgid "Users of Windows and other shells such as Fish should read the `guide <https://virtualenv.pypa.io/en/stable/userguide/>`_ for instructions on activating."
msgstr "crwdns15135:0crwdne15135:0"

#: ../../dev/getting_started.rst:101
msgid "If you set the ``PIP_REQUIRE_VIRTUALENV`` environment variable to ``true``, pip will only install packages when a virtualenv is active. This can help prevent mistakes."
msgstr "crwdns15136:0crwdne15136:0"

#: ../../dev/getting_started.rst:102
msgid "Bash users might also consider using `virtualenvwrapper <http://virtualenvwrapper.readthedocs.io/en/latest/index.html>`_, which simplifies the process somewhat."
msgstr "crwdns15137:0crwdne15137:0"

#: ../../dev/getting_started.rst:107
msgid "Install Project Dependencies"
msgstr "crwdns15138:0crwdne15138:0"

#: ../../dev/getting_started.rst:111
msgid "Make sure your virtualenv is active!"
msgstr "crwdns15139:0crwdne15139:0"

#: ../../dev/getting_started.rst:113
msgid "To install Kolibri project-specific dependencies make sure you're in the ``kolibri`` directory and run:"
msgstr "crwdns15140:0crwdne15140:0"

#: ../../dev/getting_started.rst:130
msgid "Running Kolibri server"
msgstr "crwdns15141:0crwdne15141:0"

#: ../../dev/getting_started.rst:133
msgid "Development server"
msgstr "crwdns15142:0crwdne15142:0"

#: ../../dev/getting_started.rst:135
msgid "To start up the development server and build the client-side dependencies, use the following commands:"
msgstr "crwdns15143:0crwdne15143:0"

#: ../../dev/getting_started.rst:137
msgid "Linux and Mac:"
msgstr "crwdns15144:0crwdne15144:0"

#: ../../dev/getting_started.rst:143
msgid "Windows:"
msgstr "crwdns15145:0crwdne15145:0"

#: ../../dev/getting_started.rst:150
msgid "Wait for the build process to complete. This takes a while the first time, will complete faster as you make edits and the assets are automatically re-built."
msgstr "crwdns15146:0crwdne15146:0"

#: ../../dev/getting_started.rst:152
msgid "Now you should be able to access the server at ``http://127.0.0.1:8000/``."
msgstr "crwdns15147:0crwdne15147:0"

#: ../../dev/getting_started.rst:156
msgid "If you need to make the development server available through the LAN, you must leave out the ``--webpack`` flag, and use the following command:"
msgstr "crwdns15148:0crwdne15148:0"

#: ../../dev/getting_started.rst:163
msgid "Now you can simply use your server's IP from another device in the local network through the port 8000, for example ``http://192.168.1.38:8000/``."
msgstr "crwdns15149:0crwdne15149:0"

#: ../../dev/getting_started.rst:167
msgid "Running the Production Server"
msgstr "crwdns15150:0crwdne15150:0"

#: ../../dev/getting_started.rst:169
msgid "In production, content is served through CherryPy. Static assets must be pre-built:"
msgstr "crwdns15151:0crwdne15151:0"

#: ../../dev/getting_started.rst:176
msgid "Now you should be able to access the server at ``http://127.0.0.1:8080/``."
msgstr "crwdns15152:0crwdne15152:0"

#: ../../dev/getting_started.rst:180
msgid "Contributing code to Kolibri"
msgstr "crwdns15153:0crwdne15153:0"

#: ../../dev/getting_started.rst:182
msgid "Once you've toyed around with things, read through the rest of the :doc:`index`, especially topics in :ref:`architecture` and :ref:`themes` to understand more about the Kolibri structure."
msgstr "crwdns15154:0:doc:crwdnd15154:0:ref:crwdnd15154:0:ref:crwdne15154:0"

#: ../../dev/getting_started.rst:183
msgid "When you're up to speed with that, you're probably itching to make some contributions! Head over to the `issues page on GitHub <https://github.com/learningequality/kolibri/issues>`_ and take a look at the current project priorities. Try filtering by milestone. If you find a bug in your testing, please `submit your own issue <https://github.com/learningequality/kolibri/issues/new>`_"
msgstr "crwdns15155:0crwdne15155:0"

#: ../../dev/getting_started.rst:184
msgid "Once you've identified an issue and you're ready to start hacking on a solution, get ready to :ref:`pull_request`!"
msgstr "crwdns15156:0:ref:crwdne15156:0"

#: ../../dev/getting_started.rst:187
msgid "Branching and Release Process"
msgstr "crwdns15157:0crwdne15157:0"

#: ../../dev/getting_started.rst:189
msgid "The ``develop`` branch is reserved for active development. When we get close to releasing a new stable version/release of Kolibri, we generally fork the develop branch into a new branch (like ``release-0.1.x``). If you're working on an issue tagged for example with the ``release-0.1.x`` milestone, then you should target changes to that branch. Changes to those branches will later be pulled into ``develop`` again. If you're not sure which branch to target, ask the dev team!"
msgstr "crwdns15158:0crwdne15158:0"

#: ../../dev/getting_started.rst:193
msgid "At a high level, we follow the 'Gitflow' model. Some helpful references: * http://nvie.com/posts/a-successful-git-branching-model/ * https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow/"
msgstr "crwdns15159:0crwdne15159:0"

#: ../../dev/getting_started.rst:200
msgid "Submit Pull Requests"
msgstr "crwdns15160:0crwdne15160:0"

#: ../../dev/getting_started.rst:202
msgid "The most common situation is working off of ``develop`` branch so we'll take it as an example:"
msgstr "crwdns15161:0crwdne15161:0"

#: ../../dev/getting_started.rst:209
msgid "After making changes to the code, commit and push them to a branch on your fork:"
msgstr "crwdns15162:0crwdne15162:0"

#: ../../dev/getting_started.rst:217
msgid "Go to `Kolibri GitHub page <https://github.com/learningequality/kolibri>`_, and if you are logged-in you will see the link to compare your branch and and create the new pull request. **Please fill in all the aplicable sections in the PR template and DELETE unecessary headings**. Another member of the team will review your code, and either ask for updates on your part or merge your PR to Kolibri codebase. Until the PR is merged you can push new commits to your branch and add updates to it."
msgstr "crwdns15163:0crwdne15163:0"

#: ../../dev/getting_started.rst:221
msgid "Additional Recommended Setup"
msgstr "crwdns15164:0crwdne15164:0"

#: ../../dev/getting_started.rst:223
msgid "If you're planning on contributing code to the project, there are a few additional steps you should consider taking."
msgstr "crwdns15165:0crwdne15165:0"

#: ../../dev/getting_started.rst:227
msgid "Editor Config"
msgstr "crwdns15166:0crwdne15166:0"

#: ../../dev/getting_started.rst:229
msgid "We have a project-level *.editorconfig* file to help you configure your text editor or IDE to use our internal conventions."
msgstr "crwdns15167:0crwdne15167:0"

#: ../../dev/getting_started.rst:231
msgid "`Check your editor <http://editorconfig.org/#download>`_ to see if it supports EditorConfig out-of-the-box, or if a plugin is available."
msgstr "crwdns15168:0crwdne15168:0"

#: ../../dev/getting_started.rst:235
msgid "Front-end Dev Tools"
msgstr "crwdns15169:0crwdne15169:0"

#: ../../dev/getting_started.rst:237
msgid "If you're working with front-end Vue.js and use Google Chrome Dev Tools, you may find the `Vue.js devtools <https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en>`_ helpful"
msgstr "crwdns15170:0crwdne15170:0"

#: ../../dev/getting_started.rst:241
msgid "DB Setup"
msgstr "crwdns15171:0crwdne15171:0"

#: ../../dev/getting_started.rst:243
msgid "You can initialize the server using:"
msgstr "crwdns15172:0crwdne15172:0"

#: ../../dev/getting_started.rst:251
msgid "Pre-Commit Install"
msgstr "crwdns15173:0crwdne15173:0"

#: ../../dev/getting_started.rst:253
msgid "We use `pre-commit <http://pre-commit.com/>`_ to help ensure consistent, clean code. The pip package should already be installed from a prior setup step, but you need to install the git hooks using this command."
msgstr "crwdns15174:0crwdne15174:0"

#: ../../dev/getting_started.rst:261
msgid "Development"
msgstr "crwdns15175:0crwdne15175:0"

#: ../../dev/getting_started.rst:264
msgid "Linting"
msgstr "crwdns15176:0crwdne15176:0"

#: ../../dev/getting_started.rst:266
msgid "To improve build times, and facilitate rapid development, Javascript linting is turned off by default when you run the dev server. However, all frontend assets that are bundled will be linted by our Travis CI builds. It is a good idea, therefore, to test your linting before submitting code for PR. To run the devserver in this mode you can run the following command."
msgstr "crwdns15177:0crwdne15177:0"

#: ../../dev/getting_started.rst:274
msgid "Code Testing"
msgstr "crwdns15178:0crwdne15178:0"

#: ../../dev/getting_started.rst:276
msgid "Kolibri comes with a Python test suite based on ``py.test``. To run tests in your current environment:"
msgstr "crwdns15179:0crwdne15179:0"

#: ../../dev/getting_started.rst:282
msgid "You can also use ``tox`` to setup a clean and disposable environment:"
msgstr "crwdns15180:0crwdne15180:0"

#: ../../dev/getting_started.rst:288
msgid "To run Python tests for all environments, lint and documentation tests, use simply ``tox``. This simulates what our CI also does."
msgstr "crwdns15181:0crwdne15181:0"

#: ../../dev/getting_started.rst:290
msgid "To run Python linting tests (pep8 and static code analysis), use ``tox -e lint`` or ``make lint``."
msgstr "crwdns15182:0crwdne15182:0"

#: ../../dev/getting_started.rst:293
msgid "Note that tox, by default, reuses its environment when it is run again. If you add anything to the requirements, you will want to either delete the `.tox` directory, or run ``tox`` with the ``-r`` argument to recreate the environment."
msgstr "crwdns15183:0crwdne15183:0"

#: ../../dev/getting_started.rst:295
#, python-format
msgid "We strive for 100% code coverage in Kolibri. When you open a Pull Request, code coverage (and your impact on coverage) will be reported. To test code coverage locally, so that you can work to improve it, you can run the following:"
msgstr "crwdns15184:0crwdne15184:0"

#: ../../dev/getting_started.rst:302
msgid "Then, open the generated ./htmlcov/index.html file in your browser."
msgstr "crwdns15185:0crwdne15185:0"

#: ../../dev/getting_started.rst:304
msgid "Kolibri comes with a Javascript test suite based on ``mocha``. To run all tests:"
msgstr "crwdns15186:0crwdne15186:0"

#: ../../dev/getting_started.rst:310
msgid "This includes tests of the bundling functions that are used in creating front end assets. To do continuous unit testing for code, and jshint running:"
msgstr "crwdns15187:0crwdne15187:0"

#: ../../dev/getting_started.rst:316
msgid "Alternatively, this can be run as a subprocess in the development server with the following flag:"
msgstr "crwdns15188:0crwdne15188:0"

#: ../../dev/getting_started.rst:322
msgid "You can also run tests through Django's ``test`` management command, accessed through the ``kolibri`` command:"
msgstr "crwdns15189:0crwdne15189:0"

#: ../../dev/getting_started.rst:328
msgid "To run specific tests only, you can add ``--``, followed by a label (consisting of the import path to the test(s) you want to run, possibly ending in some subset of a filename, classname, and method name). For example, the following will run only one test, named ``test_admin_can_delete_membership`` in the ``MembershipPermissionsTestCase`` class in kolibri/auth/test/test_permissions.py:"
msgstr "crwdns15190:0crwdne15190:0"

#: ../../dev/getting_started.rst:336
msgid "Updating Documentation"
msgstr "crwdns15191:0crwdne15191:0"

#: ../../dev/getting_started.rst:338
msgid "First, install some additional dependencies related to building documentation output:"
msgstr "crwdns15192:0crwdne15192:0"

#: ../../dev/getting_started.rst:345
msgid "To make changes to documentation, edit the ``rst`` files in the ``kolibri/docs`` directory and then run:"
msgstr "crwdns15193:0crwdne15193:0"

#: ../../dev/getting_started.rst:351
msgid "You can also run the auto-build for faster editing from the ``docs`` directory:"
msgstr "crwdns15194:0crwdne15194:0"

#: ../../dev/getting_started.rst:360
msgid "Manual Testing"
msgstr "crwdns15195:0crwdne15195:0"

#: ../../dev/getting_started.rst:362
msgid "All changes should be thoroughly tested and vetted before being merged in. Our primary considerations are:"
msgstr "crwdns15196:0crwdne15196:0"

#: ../../dev/getting_started.rst:364
msgid "Performance"
msgstr "crwdns15197:0crwdne15197:0"

#: ../../dev/getting_started.rst:365
msgid "Accessibility"
msgstr "crwdns15198:0crwdne15198:0"

#: ../../dev/getting_started.rst:366
msgid "Compatibility"
msgstr "crwdns15199:0crwdne15199:0"

#: ../../dev/getting_started.rst:367
msgid "Localization"
msgstr "crwdns15200:0crwdne15200:0"

#: ../../dev/getting_started.rst:368
msgid "Consistency"
msgstr "crwdns15201:0crwdne15201:0"

#: ../../dev/getting_started.rst:370
msgid "For more information, see the next section on :doc:`manual_testing`."
msgstr "crwdns15202:0:doc:crwdne15202:0"

#: ../../dev/glossary.rst:2
msgid "Glossary"
msgstr "crwdns15203:0crwdne15203:0"

#: ../../dev/glossary.rst:5
msgid "Words with special meanings in the Kolibri ecosystem."
msgstr "crwdns15204:0crwdne15204:0"

#: ../../dev/glossary.rst:11
msgid "App"
msgstr "crwdns15205:0crwdne15205:0"

#: ../../dev/glossary.rst:9
msgid "A Kolibri 'app' is a special sort of plugin which provides a top-level URL and a self-contained single-page javascript application. Each app attaches a single root view component to the HTML returned by a skeleton Django template."
msgstr "crwdns15206:0crwdne15206:0"

#: ../../dev/glossary.rst:11
msgid "Examples of apps are the Learn, Admin, and Coach Reports apps."
msgstr "crwdns15207:0crwdne15207:0"

#: ../../dev/glossary.rst:14
msgid "Bundle"
msgstr "crwdns15208:0crwdne15208:0"

#: ../../dev/glossary.rst:14
msgid "'Bundle' is a webpack term, referring to a collection of client-side assets. See :doc:`asset_loading` for more info."
msgstr "crwdns15209:0:doc:crwdne15209:0"

#: ../../dev/glossary.rst:21
msgid "Component"
msgstr "crwdns15210:0crwdne15210:0"

#: ../../dev/glossary.rst:17
msgid "A 'view component' is a composable UI element on the client-side, defined using Vue.js components."
msgstr "crwdns15211:0crwdne15211:0"

#: ../../dev/glossary.rst:19
msgid "Components are defined using using HTML, other components, styling, internationalized text, internal logic, and – if necessary – internal state. Every component has an interface defined by its input parameters, events, and slots that can take arbitrary HTML to render in itself."
msgstr "crwdns15212:0crwdne15212:0"

#: ../../dev/glossary.rst:21
msgid "See :doc:`frontend` for more info."
msgstr "crwdns15213:0:doc:crwdne15213:0"

#: ../../dev/glossary.rst:26
msgid "Hook"
msgstr "crwdns15214:0crwdne15214:0"

#: ../../dev/glossary.rst:24
msgid "A 'hook' is the server-side mechanism by which plugins interact with each other and with the core app. Hooks allow behaviors and interactions to be defined abstractly by Kolibri core and then implemented concretely by plugins."
msgstr "crwdns15215:0crwdne15215:0"

#: ../../dev/glossary.rst:26 ../../dev/glossary.rst:35
msgid "See :doc:`plugins` for more info."
msgstr "crwdns15216:0:doc:crwdne15216:0"

#: ../../dev/glossary.rst:34
msgid "Plugin"
msgstr "crwdns15217:0crwdne15217:0"

#: ../../dev/glossary.rst:29
msgid "Kolibri 'plugins' define both functionality client- and server-side functionality. They can be enabled and disabled on a per-installation basis. Plugins are decoupled from each other, but are dependent on the core Kolibri application."
msgstr "crwdns15218:0crwdne15218:0"

#: ../../dev/glossary.rst:31
msgid "In theory, any plugin can be disabled and the application should still function without error, albeit limited functionality."
msgstr "crwdns15219:0crwdne15219:0"

#: ../../dev/glossary.rst:33
msgid "Examples of plugins include the Learn application, and a content renderer for vector video."
msgstr "crwdns15220:0crwdne15220:0"

#: ../../dev/i18n.rst:2
msgid "i18n"
msgstr "crwdns15221:0crwdne15221:0"

#: ../../dev/i18n.rst:4
msgid "As a platform intended for use around the world, Kolibri has a strong mandate for translation and internationalization. As such, it has been designed with technologies to enable this built in."
msgstr "crwdns15222:0crwdne15222:0"

#: ../../dev/i18n.rst:8
msgid "Backend Translation"
msgstr "crwdns15223:0crwdne15223:0"

#: ../../dev/i18n.rst:10
msgid "For any strings in Django, we are using the standard Django i18n machinery (gettext and associated functions) to provide translations. See the `Django i18n documentation <https://docs.djangoproject.com/en/1.10/topics/i18n/>`_ for more information."
msgstr "crwdns15224:0crwdne15224:0"

#: ../../dev/i18n.rst:14
msgid "Frontend Translation"
msgstr "crwdns15225:0crwdne15225:0"

#: ../../dev/i18n.rst:16
msgid "For any strings in the frontend, we are using `Vue-Intl <https://www.npmjs.com/package/vue-intl>`_ an in house port of `React-intl <https://www.npmjs.com/package/react-intl>`_."
msgstr "crwdns15226:0crwdne15226:0"

#: ../../dev/i18n.rst:18
msgid "Within Kolibri, messages are defined on the body of the Vue component::"
msgstr "crwdns15227:0crwdne15227:0"

#: ../../dev/i18n.rst:28
msgid "User visible strings should be rendered directly in the template with ``{{ $tr('msgId') }}``. These strings are collected during the build process, and bundled into exported JSON files. These files are then uploaded to Crowdin for translation."
msgstr "crwdns15228:0{{ $tr('msgId') }}crwdne15228:0"

#: ../../dev/i18n.rst:30
msgid "An example Vue component would then look like this::"
msgstr "crwdns15229:0crwdne15229:0"

#: ../../dev/i18n.rst:57
msgid "Downloaded files from crowdin need to be copied into the relevant plugins from which they have come using the `distributefrontendmessages` make command."
msgstr "crwdns15230:0crwdne15230:0"

#: ../../dev/i18n.rst:59
msgid "These messages will then be discovered for any registered plugins and loaded into the page if that language is set as the Django language. All language setting for the Frontend is based off the current Django language for the request."
msgstr "crwdns15231:0crwdne15231:0"

#: ../../dev/index.rst:2
msgid "Developer Guide"
msgstr "crwdns15232:0crwdne15232:0"

#: ../../dev/index.rst:13
msgid "Architecture"
msgstr "crwdns15233:0crwdne15233:0"

#: ../../dev/index.rst:29
msgid "Themes"
msgstr "crwdns15234:0crwdne15234:0"

#: ../../dev/index.rst:41
msgid "References"
msgstr "crwdns15235:0crwdne15235:0"

#: ../../dev/logger.rst:2
msgid "User Logs"
msgstr "crwdns15236:0crwdne15236:0"

#: ../../dev/logger.rst:4
msgid "This is a core module found in ``kolibri/logger``."
msgstr "crwdns15237:0crwdne15237:0"

#: kolibri.logger.models:1 of
msgid "This app is intended to provide the core functionality for tracking user engagement with content and Kolibri in general. As such, it is intended to store details of user interactions with content, a summary of those interactions, interactions with the software in general, as well as user feedback on the content and the software."
msgstr "crwdns15238:0crwdne15238:0"

#: kolibri.logger.models.AttemptLog:1 of
msgid "This model provides a summary of a user's engagement within a particular interaction with an item in an assessment"
msgstr "crwdns15239:0crwdne15239:0"

#: kolibri.auth.models.AbstractFacilityDataModel:4
#: kolibri.auth.models.Classroom:3 kolibri.auth.models.Collection:8
#: kolibri.auth.models.Facility:3 kolibri.auth.models.FacilityUser:10
#: kolibri.auth.models.LearnerGroup:3 kolibri.auth.models.Membership:8
#: kolibri.auth.models.Role:8 kolibri.logger.models.AttemptLog:6
#: kolibri.logger.models.ContentRatingLog:5
#: kolibri.logger.models.ContentSessionLog:5
#: kolibri.logger.models.ContentSummaryLog:5 kolibri.logger.models.MasteryLog:5
#: kolibri.logger.models.UserSessionLog:5 of
msgid "Dataset"
msgstr "crwdns15240:0crwdne15240:0"

#: kolibri.logger.models.AttemptLog:8 of
msgid "Item"
msgstr "crwdns15241:0crwdne15241:0"

#: kolibri.logger.models.AttemptLog:10
#: kolibri.logger.models.ContentSessionLog:13
#: kolibri.logger.models.ContentSummaryLog:13
#: kolibri.logger.models.MasteryLog:11 kolibri.logger.models.UserSessionLog:11
#: of
msgid "Start timestamp"
msgstr "crwdns15242:0crwdne15242:0"

#: kolibri.logger.models.AttemptLog:12
#: kolibri.logger.models.ContentSessionLog:15
#: kolibri.logger.models.ContentSummaryLog:15
#: kolibri.logger.models.MasteryLog:13 of
msgid "End timestamp"
msgstr "crwdns15243:0crwdne15243:0"

#: kolibri.logger.models.AttemptLog:14
#: kolibri.logger.models.ContentSummaryLog:17
#: kolibri.logger.models.MasteryLog:15 of
msgid "Completion timestamp"
msgstr "crwdns15244:0crwdne15244:0"

#: kolibri.logger.models.AttemptLog:16 of
msgid "Masterylog"
msgstr "crwdns15245:0crwdne15245:0"

#: kolibri.logger.models.AttemptLog:18 of
msgid "Sessionlog"
msgstr "crwdns15246:0crwdne15246:0"

#: kolibri.logger.models.AttemptLog:20
#: kolibri.logger.models.ContentSessionLog:17
#: kolibri.logger.models.ContentSummaryLog:19 of
msgid "(in seconds)"
msgstr "crwdns15247:0crwdne15247:0"

#: kolibri.logger.models.AttemptLog:22 kolibri.logger.models.MasteryLog:19 of
msgid "Complete"
msgstr "crwdns15248:0crwdne15248:0"

#: kolibri.logger.models.AttemptLog:24 of
msgid "Correct"
msgstr "crwdns15249:0crwdne15249:0"

#: kolibri.logger.models.AttemptLog:26 of
msgid "Hinted"
msgstr "crwdns15250:0crwdne15250:0"

#: kolibri.logger.models.AttemptLog:28 of
msgid "Answer"
msgstr "crwdns15251:0crwdne15251:0"

#: kolibri.logger.models.AttemptLog:30 of
msgid "Simple answer"
msgstr "crwdns15252:0crwdne15252:0"

#: kolibri.logger.models.AttemptLog:32 of
msgid "Interaction history"
msgstr "crwdns15253:0crwdne15253:0"

#: kolibri.logger.models.ContentRatingLog:1 of
msgid "This model provides a record of user feedback on a content item."
msgstr "crwdns15254:0crwdne15254:0"

#: kolibri.auth.models.Membership:10 kolibri.auth.models.Role:10
#: kolibri.logger.models.ContentRatingLog:7
#: kolibri.logger.models.ContentSessionLog:7
#: kolibri.logger.models.ContentSummaryLog:7
#: kolibri.logger.models.UserSessionLog:7 of
msgid "User"
msgstr "crwdns15255:0crwdne15255:0"

#: kolibri.logger.models.ContentRatingLog:11
#: kolibri.logger.models.ContentSessionLog:11
#: kolibri.logger.models.ContentSummaryLog:11 of
msgid "Channel id"
msgstr "crwdns15256:0crwdne15256:0"

#: kolibri.logger.models.ContentRatingLog:13 of
msgid "Quality"
msgstr "crwdns15257:0crwdne15257:0"

#: kolibri.logger.models.ContentRatingLog:15 of
msgid "Ease"
msgstr "crwdns15258:0crwdne15258:0"

#: kolibri.logger.models.ContentRatingLog:17 of
msgid "Learning"
msgstr "crwdns15259:0crwdne15259:0"

#: kolibri.logger.models.ContentRatingLog:19 of
msgid "Feedback"
msgstr "crwdns15260:0crwdne15260:0"

#: kolibri.logger.models.ContentSessionLog:1 of
msgid "This model provides a record of interactions with a content item within a single visit to that content page."
msgstr "crwdns15261:0crwdne15261:0"

#: kolibri.logger.models.ContentSessionLog:19
#: kolibri.logger.models.ContentSummaryLog:21 of
msgid "Progress"
msgstr "crwdns15262:0crwdne15262:0"

#: kolibri.logger.models.ContentSessionLog:23
#: kolibri.logger.models.ContentSummaryLog:25 of
msgid "Extra fields"
msgstr "crwdns15263:0crwdne15263:0"

#: kolibri.logger.models.ContentSummaryLog:1 of
msgid "This model provides a summary of all interactions a user has had with a content item."
msgstr "crwdns15264:0crwdne15264:0"

#: kolibri.logger.models.MasteryLog:1 of
msgid "This model provides a summary of a user's engagement with an assessment within a mastery level"
msgstr "crwdns15265:0crwdne15265:0"

#: kolibri.logger.models.MasteryLog:7 of
msgid "Summarylog"
msgstr "crwdns15266:0crwdne15266:0"

#: kolibri.logger.models.MasteryLog:9 of
msgid "Mastery criterion"
msgstr "crwdns15267:0crwdne15267:0"

#: kolibri.logger.models.MasteryLog:17 of
msgid "Mastery level"
msgstr "crwdns15268:0crwdne15268:0"

#: kolibri.logger.models.UserSessionLog:1 of
msgid "This model provides a record of a user session in Kolibri."
msgstr "crwdns15269:0crwdne15269:0"

#: kolibri.logger.models.UserSessionLog:9 of
msgid "Channels"
msgstr "crwdns15270:0crwdne15270:0"

#: kolibri.logger.models.UserSessionLog:13 of
msgid "Last interaction timestamp"
msgstr "crwdns15271:0crwdne15271:0"

#: kolibri.logger.models.UserSessionLog:15 of
msgid "Pages"
msgstr "crwdns15272:0crwdne15272:0"

#: kolibri.logger.models.UserSessionLog.update_log:1 of
msgid "Update the current UserSessionLog for a particular user."
msgstr "crwdns15273:0crwdne15273:0"

#: ../../dev/logger/concepts_and_definitions.rst:5
msgid "Content Interaction Log"
msgstr "crwdns15274:0crwdne15274:0"

#: ../../dev/logger/concepts_and_definitions.rst:6
msgid "This Model provides a record of an interaction with a content item. As such, it should encode the channel that the content was in, and the id of the content. Further, it may be required to encode arbitrary data in a JSON blob that is specific to the particular content type."
msgstr "crwdns15275:0crwdne15275:0"

#: ../../dev/logger/concepts_and_definitions.rst:11
msgid "As a typical use case, a ContentInteractionLog object might be used to record an interaction with one instance of an exercise (i.e. one question, but possibly multiple attempts within the same session), or a single session of viewing a video."
msgstr "crwdns15276:0crwdne15276:0"

#: ../../dev/logger/concepts_and_definitions.rst:15
#: ../../dev/logger/concepts_and_definitions.rst:51
#: ../../dev/logger/concepts_and_definitions.rst:62
msgid "Finally, these Logs will use MorangoDB to synchronize their data across devices."
msgstr "crwdns15277:0crwdne15277:0"

#: ../../dev/logger/concepts_and_definitions.rst:19
msgid "Content Summary Log"
msgstr "crwdns15278:0crwdne15278:0"

#: ../../dev/logger/concepts_and_definitions.rst:20
msgid "This Model provides a summary of all interactions of a user with a content item. As such, it should encode the channel that the content was in, and the id of the content. Further, it may be required to encode arbitrary data in a JSON blob that is specific to the particular content type."
msgstr "crwdns15279:0crwdne15279:0"

#: ../../dev/logger/concepts_and_definitions.rst:25
msgid "As a typical use case, a ContentSummaryLog object might be used to provide summary data about the state of completion of a particular exercise, video, or other content."
msgstr "crwdns15280:0crwdne15280:0"

#: ../../dev/logger/concepts_and_definitions.rst:29
msgid "When a new InteractionLog is saved, the associated SummaryLog is updated at the same time. This means that the SummaryLog acts as an aggregation layer for the current state of progress for a particular piece of content."
msgstr "crwdns15281:0crwdne15281:0"

#: ../../dev/logger/concepts_and_definitions.rst:33
msgid "To implement this, a content viewer app would define the aggregation function that summarizes interaction logs into the summary log. While this could happen in the frontend, it would probably be more efficient for this to happen on the server side."
msgstr "crwdns15282:0crwdne15282:0"

#: ../../dev/logger/concepts_and_definitions.rst:38
msgid "Finally, these Logs will use MorangoDB to synchronize their data across devices - in the case where two summary logs from  different devices conflict, then the aggregation logic would be applied across all interaction logs to create a consolidated summary log."
msgstr "crwdns15283:0crwdne15283:0"

#: ../../dev/logger/concepts_and_definitions.rst:45
msgid "Content Rating Log"
msgstr "crwdns15284:0crwdne15284:0"

#: ../../dev/logger/concepts_and_definitions.rst:46
msgid "This Model provides a record of user feedback on content."
msgstr "crwdns15285:0crwdne15285:0"

#: ../../dev/logger/concepts_and_definitions.rst:48
msgid "As a typical use case, a ContentRatingLog object might be used to record user feedback data about any content."
msgstr "crwdns15286:0crwdne15286:0"

#: ../../dev/logger/concepts_and_definitions.rst:54
msgid "User Session Log"
msgstr "crwdns15287:0crwdne15287:0"

#: ../../dev/logger/concepts_and_definitions.rst:55
msgid "This Model provides a record of an user session in Kolibri. As such, it should encode the channels interacted with, the length of time engaged, and the pages visited."
msgstr "crwdns15288:0crwdne15288:0"

#: ../../dev/logger/concepts_and_definitions.rst:59
msgid "As a typical use case, a UserSessionLog object might be used to record which pages a user visits, and how long the user is logged on for."
msgstr "crwdns15289:0crwdne15289:0"

#: ../../dev/logger/implementations.rst:2 ../../dev/uap/implementation.rst:2
msgid "Implementation Details"
msgstr "crwdns15290:0crwdne15290:0"

#: ../../dev/logger/implementations.rst:5
msgid "Permissions"
msgstr "crwdns15291:0crwdne15291:0"

#: ../../dev/logger/implementations.rst:7
msgid "See :ref:`my-reference-label`."
msgstr "crwdns15292:0:ref:crwdne15292:0"

#: ../../dev/manual_testing.rst:3
msgid "Manual Testing & QA"
msgstr "crwdns15293:0crwdne15293:0"

#: ../../dev/manual_testing.rst:6
msgid "Accessibility (A11Y) Testing"
msgstr "crwdns15294:0crwdne15294:0"

#: ../../dev/manual_testing.rst:8
msgid "Inclusive design benefits all users, and we strive to make Kolibri accessible for all. Testing for accessibility can be challenging, but there are a few features you should check for before submitting your PR:"
msgstr "crwdns15295:0crwdne15295:0"

#: ../../dev/manual_testing.rst:10
msgid "Working **keyboard navigation** - everything that user can do with mouse or by touch must also work with the `keyboard alone <http://webaim.org/techniques/keyboard/>`_."
msgstr "crwdns15296:0crwdne15296:0"

#: ../../dev/manual_testing.rst:11
msgid "Sufficient `color contrast <http://a11yproject.com/posts/what-is-color-contrast/>`_ between foreground text/elements and the background."
msgstr "crwdns15297:0crwdne15297:0"

#: ../../dev/manual_testing.rst:12
msgid "Meaningful **text alternative** for all non-decorative images, or an empty ``ALT`` attribute in case of decorative ones."
msgstr "crwdns15298:0crwdne15298:0"

#: ../../dev/manual_testing.rst:13
msgid "Meaningful **labels** on ALL `form or button elements <http://accessibility.psu.edu/forms/>`_."
msgstr "crwdns15299:0crwdne15299:0"

#: ../../dev/manual_testing.rst:14
msgid "Page has one main **heading** (H1) and `consecutive lower heading levels <http://accessiblehtmlheadings.com/>`_."
msgstr "crwdns15300:0crwdne15300:0"

#: ../../dev/manual_testing.rst:17
msgid "Here are a few tools that we use in testing for accessibility:"
msgstr "crwdns15301:0crwdne15301:0"

#: ../../dev/manual_testing.rst:19
msgid "`WAVE Evaluation Tool <http://wave.webaim.org/extension/>`_ - Chrome extension."
msgstr "crwdns15302:0crwdne15302:0"

#: ../../dev/manual_testing.rst:20
msgid "`tota11y <http://khan.github.io/tota11y/>`_ accessibility visualization toolkit - bookmarklet for Firefox and Chrome."
msgstr "crwdns15303:0crwdne15303:0"

#: ../../dev/manual_testing.rst:21
msgid "`Accessibility Developer Tools <https://chrome.google.com/webstore/detail/accessibility-developer-t/fpkknkljclfencbdbgkenhalefipecmb>`_ - Chrome extension."
msgstr "crwdns15304:0crwdne15304:0"

#: ../../dev/manual_testing.rst:22
msgid "aXe Accessibility Engine - `Firefox Addon <https://addons.mozilla.org/en-us/firefox/addon/axe-devtools/>`_ and `Chrome extension <https://chrome.google.com/webstore/detail/axe/lhdoppojpmngadmnindnejefpokejbdd>`_."
msgstr "crwdns15305:0crwdne15305:0"

#: ../../dev/manual_testing.rst:24
msgid "There is a much longer list of tools (specially for color contrast checking) on our `KA Lite Wiki page <https://github.com/learningequality/ka-lite/wiki/Accessibility-Resources-(Tools)>`_ if you want to go deeper, but these four should be enough to help you avoid the most important accessibility pitfalls."
msgstr "crwdns15306:0crwdne15306:0"

#: ../../dev/manual_testing.rst:28
msgid "Cross-browser and OS Testing"
msgstr "crwdns15307:0crwdne15307:0"

#: ../../dev/manual_testing.rst:30
msgid "It's vital to ensure that our app works across a wide range of browsers and operating systems, particularly older versions of Windows and Android that are common on older and cheaper devices."
msgstr "crwdns15308:0crwdne15308:0"

#: ../../dev/manual_testing.rst:32
#, python-format
msgid "In particular, we want to ensure that Kolibri runs on major browsers that match any of `the following criteria <http://browserl.ist/?q=%3E+1%25%2C+last+2+versions%2C+ie+%3E%3D+9%2C+Firefox+ESR>`_:"
msgstr "crwdns15309:0%3Ecrwdnd15309:0%25crwdnd15309:0%2Ccrwdnd15309:0%2Ccrwdnd15309:0%3Ecrwdnd15309:0%3crwdnd15309:0%2Ccrwdne15309:0"

#: ../../dev/manual_testing.rst:34
msgid "within the last two versions"
msgstr "crwdns15310:0crwdne15310:0"

#: ../../dev/manual_testing.rst:35
msgid "IE 9+ on Windows XP and up"
msgstr "crwdns15311:0crwdne15311:0"

#: ../../dev/manual_testing.rst:36
#, python-format
msgid "has at least 1% of global usage stats"
msgstr "crwdns15312:0crwdne15312:0"

#: ../../dev/manual_testing.rst:38
msgid "Here are some useful options, in order of simplicity:"
msgstr "crwdns15313:0crwdne15313:0"

#: ../../dev/manual_testing.rst:40
msgid "**BrowserStack**"
msgstr "crwdns15314:0crwdne15314:0"

#: ../../dev/manual_testing.rst:42
msgid "`BrowserStack <https://www.browserstack.com/>`_ is an incredibly useful tool for cross-browser and OS testing. In particular, it's easy to install plugin which forwards ``localhost`` to a VM running on their servers, which in turn is displayed in your browser."
msgstr "crwdns15315:0crwdne15315:0"

#: ../../dev/manual_testing.rst:44
msgid "**Amazon Workspaces**"
msgstr "crwdns15316:0crwdne15316:0"

#: ../../dev/manual_testing.rst:46
msgid "In some situations, simply having a browser is not enough. For example, a developer may need to test Windows-specific backend or installer code from another OS. In many situations, a virtual machine is appropriate - however these can be slow to download and run."
msgstr "crwdns15317:0crwdne15317:0"

#: ../../dev/manual_testing.rst:48
msgid "Amazon's `AWS Workspaces <https://aws.amazon.com/workspaces/>`_ provides a faster alternative. They run Windows VMs in their cloud, and developers can RDP in."
msgstr "crwdns15318:0crwdne15318:0"

#: ../../dev/manual_testing.rst:50
msgid "**Local Virtual Machines**"
msgstr "crwdns15319:0crwdne15319:0"

#: ../../dev/manual_testing.rst:52
msgid "Workspaces is very useful, but it has limitations: only a small range of OSes are available, and connectivity and provisioning are required."
msgstr "crwdns15320:0crwdne15320:0"

#: ../../dev/manual_testing.rst:54
msgid "An alternative is to run the guest operating system inside a virtual machine using e.g. `VirtualBox <https://www.virtualbox.org/wiki/Downloads>`_. This also gives more developer flexibility, including e.g. shared directories between the guest and host systems. `This tutorial <https://docs.google.com/document/d/10LgeCJmqsweui0yTTCDf4DjY5aoNNpXG8hF_DGKUHAI/edit>`_ was written for KA Lite, but much of it still applies to Kolibri."
msgstr "crwdns15321:0crwdne15321:0"

#: ../../dev/manual_testing.rst:56
msgid "**Hardware**"
msgstr "crwdns15322:0crwdne15322:0"

#: ../../dev/manual_testing.rst:58
msgid "There are some situations where actual hardware is necessary to test the application. This is particularly true when virtualization might prohibit or impede testing features, such as lower-level driver interactions."
msgstr "crwdns15323:0crwdne15323:0"

#: ../../dev/manual_testing.rst:62
msgid "Responsiveness to Varying Screen Sizes"
msgstr "crwdns15324:0crwdne15324:0"

#: ../../dev/manual_testing.rst:64
msgid "We want to ensure that the app looks and behaves reasonably across a wide range of typical screen sizes, from small tablets to large, HD monitors. It is highly recommended to constantly be testing functionality at a range of sizes."
msgstr "crwdns15325:0crwdne15325:0"

#: ../../dev/manual_testing.rst:66
msgid "Chrome and Firefox's Developer Tools both have some excellent functionality to simulate arbitrary screen resolutions."
msgstr "crwdns15326:0crwdne15326:0"

#: ../../dev/manual_testing.rst:70
msgid "Slow Network Connection Speeds"
msgstr "crwdns15327:0crwdne15327:0"

#: ../../dev/manual_testing.rst:72
msgid "It's important to simulate end-users network conditions. This will help identify real-world performance issues that may not be apparent on local development machines."
msgstr "crwdns15328:0crwdne15328:0"

#: ../../dev/manual_testing.rst:74
msgid "Chrome's Developer Tools have functionality to simulate a variety of network connections, including Edge, 3G, and even offline. An app can be loaded into multiple tabs, each with its own custom network connectivity profile. This will not affect traffic to other tabs."
msgstr "crwdns15329:0crwdne15329:0"

#: ../../dev/manual_testing.rst:76
msgid "Within the Chrome Dev Tools, navigate to the Network panel. Select a connection from the drop-down to apply network throttling and latency manipulation. When a Throttle is enabled the panel indicator will show a warning icon. This is to remind you that throttling is enabled when you are in other panels."
msgstr "crwdns15330:0crwdne15330:0"

#: ../../dev/manual_testing.rst:78
msgid "For Kolibri, our target audience's network condition can be mimicked by setting connectivity to Regular 3G (100ms, 750kb/s, 250 kb/s)."
msgstr "crwdns15331:0crwdne15331:0"

#: ../../dev/plugins.rst:4
msgid "Plugins"
msgstr "crwdns15332:0crwdne15332:0"

#: ../../dev/plugins.rst:6
msgid "The behavior of Kolibri can be extended using plugins. The following is a guide to developing plugins."
msgstr "crwdns15333:0crwdne15333:0"

#: ../../dev/plugins.rst:10
msgid "Enabling and disabling plugins"
msgstr "crwdns15334:0crwdne15334:0"

#: ../../dev/plugins.rst:12
msgid "Non-core plugins can be enabled or disabled using the ``kolibri plugin`` command. See :doc:`../user/cli`."
msgstr "crwdns15335:0:doc:crwdne15335:0"

#: kolibri.plugins.registry:2 of
msgid "How plugins work"
msgstr "crwdns15336:0crwdne15336:0"

#: kolibri.plugins.registry:4 of
msgid "From a user's perspective, plugins are enabled and disabled through the command line interface or through a UI. Users can also configure a plugin's behavior through the main Kolibri interface."
msgstr "crwdns15337:0crwdne15337:0"

#: kolibri.plugins.registry:10 of
msgid "We have not yet written a configuration API, for now just make sure configuration-related variables are kept in a central location of your plugin."
msgstr "crwdns15338:0crwdne15338:0"

#: kolibri.plugins.registry:14 of
msgid "It's up to the plugin to provide configuration ``Form`` classes and register them."
msgstr "crwdns15339:0crwdne15339:0"

#: kolibri.plugins.registry:17 of
msgid "We should aim for a configuration style in which data can be pre-seeded, dumped and exported easily."
msgstr "crwdns15340:0crwdne15340:0"

#: kolibri.plugins.registry:20 of
msgid "From a developer's perspective, plugins are Django applications listed in ``INSTALLED_APPS`` and are initialized once when the server starts, mean at the load time of the django project, i.e. Kolibri."
msgstr "crwdns15341:0crwdne15341:0"

#: kolibri.plugins.registry:25 of
msgid "Loading a plugin"
msgstr "crwdns15342:0crwdne15342:0"

#: kolibri.plugins.registry:27 of
msgid "In general, a plugin should **never** modify internals of Kolibri or other plugins without using the hooks API or normal conventional Django scenarios."
msgstr "crwdns15343:0crwdne15343:0"

#: kolibri.plugins.registry:32 of
msgid "Each app in ``INSTALLED_APPS`` is searched for the special ``kolibri_plugin`` module."
msgstr "crwdns15344:0crwdne15344:0"

#: kolibri.plugins.registry:35 of
msgid "Everything that a plugin does is expected to be defined through ``<myapp>/kolibri_plugin.py``."
msgstr "crwdns15345:0crwdne15345:0"

#: kolibri.plugins.hooks:2 of
msgid "Kolibri Hooks API"
msgstr "crwdns15346:0crwdne15346:0"

#: kolibri.plugins.hooks:5 of
msgid "What are hooks"
msgstr "crwdns15347:0crwdne15347:0"

#: kolibri.plugins.hooks:7 of
msgid "Hooks are classes that define *something* that happens at one or more places where the hook is looked for and applied. It means that you can \"hook into a component\" in Kolibri and have it do a predefined and parameterized *thing*. For instance, Kolibri could ask all its plugins who wants to add something to the user settings panel, and its then up to the plugins to inherit from that specific hook and feed back the parameters that the hook definition expects."
msgstr "crwdns15348:0crwdne15348:0"

#: kolibri.plugins.hooks:15 of
msgid "The consequences of a hook being applied can happen anywhere in Kolibri. Each hook is defined through a class inheriting from ``KolibriHook``. But how the inheritor of that class deals with plugins using it, is entirely up to each specific implementation and can be applied in templates, views, middleware - basically everywhere!"
msgstr "crwdns15349:0crwdne15349:0"

#: kolibri.plugins.hooks:21 of
msgid "That's why you should consult the class definition and documentation of the hook you are adding plugin functionality with."
msgstr "crwdns15350:0crwdne15350:0"

#: kolibri.plugins.hooks:24 of
msgid "We have two different types of hooks:"
msgstr "crwdns15351:0crwdne15351:0"

#: kolibri.plugins.hooks:27 of
msgid "Abstract hooks"
msgstr "crwdns15352:0crwdne15352:0"

#: kolibri.plugins.hooks:27 of
msgid "Are definitions of hooks that are implemented by *implementing hooks*."
msgstr "crwdns15353:0crwdne15353:0"

#: kolibri.plugins.hooks:31 of
msgid "Registered hooks"
msgstr "crwdns15354:0crwdne15354:0"

#: kolibri.plugins.hooks:30 of
msgid "Are concrete hooks that inherit from abstract hooks, thus embodying the definitions of the abstract hook into a specific case."
msgstr "crwdns15355:0crwdne15355:0"

#: kolibri.plugins.hooks:38 of
msgid "So what's \"a hook\"?"
msgstr "crwdns15356:0crwdne15356:0"

#: kolibri.plugins.hooks:34 of
msgid "Simply referring to \"a hook\" is okay, it can be ambiguous on purpose. For instance, in the example, we talk about \"a navigation hook\". So we both mean the abstract definition of the navigation hook and everything that is registered for the navigation."
msgstr "crwdns15357:0crwdne15357:0"

#: kolibri.plugins.hooks:41 of
msgid "Where can I find hooks?"
msgstr "crwdns15358:0crwdne15358:0"

#: kolibri.plugins.hooks:43 of
msgid "All Kolibri core applications and plugins alike should *by convention* define their abstract hooks inside ``<myapp>/hooks.py``. Thus, to see which hooks a Kolibri component exposes, you can refer to its ``hooks`` module."
msgstr "crwdns15359:0crwdne15359:0"

#: kolibri.plugins.hooks:48 of
msgid "Defining abstract hooks in ``<myapp>/hooks.py`` isn't mandatory, but *loading* a concrete hook in ``<myapp>/kolibri_plugin.py`` is."
msgstr "crwdns15360:0crwdne15360:0"

#: kolibri.plugins.hooks:52 of
msgid "Do not define abstract and registered hooks in the same module. Or to put it in other words: Never put registered hooks in ``<myapp>/hooks.py``. The non-abstract hooks should not be loaded unintentionally in case your application is not loaded but only used to import an abstract definition by an external component!"
msgstr "crwdns15361:0crwdne15361:0"

#: kolibri.plugins.hooks:60 of
msgid "In which order are hooks used/applied?"
msgstr "crwdns15362:0crwdne15362:0"

#: kolibri.plugins.hooks:62 of
msgid "This is entirely up to the registering class. By default, hooks are applied in the same order that the registered hook gets registered! This most likely means the order in which ``kolibri_plugin`` is loaded ``=>`` the order in which the app is listed in ``INSTALLED_APPS``"
msgstr "crwdns15363:0crwdne15363:0"

#: kolibri.plugins.hooks:69 of
msgid "An example of a plugin using a hook"
msgstr "crwdns15364:0crwdne15364:0"

#: kolibri.plugins.hooks:73 of
msgid "The example shows a NavigationHook which is simplified for the sake of readability. The actual implementation in Kolibri will defer."
msgstr "crwdns15365:0crwdne15365:0"

#: kolibri.plugins.hooks:78 of
msgid "Example implementation"
msgstr "crwdns15366:0crwdne15366:0"

#: kolibri.plugins.hooks:80 of
msgid "Here is an example of how to use a hook in ``myplugin.kolibri_plugin.py``:"
msgstr "crwdns15367:0crwdne15367:0"

#: kolibri.plugins.hooks:100 of
msgid "And here is the definition of that hook in kolibri.core.hooks:"
msgstr "crwdns15368:0crwdne15368:0"

#: kolibri.plugins.hooks:131 of
msgid "Usage of the hook"
msgstr "crwdns15369:0crwdne15369:0"

#: kolibri.plugins.hooks:133 of
msgid "Inside our templates, we load a template tag from navigation_tags, and this template tag definition looks like this:"
msgstr "crwdns15370:0crwdne15370:0"

#: kolibri.plugins.hooks:160 of
msgid "Do not load registered hook classes outside of a plugin's ``kolibri_plugin``. Either define them there directly or import the modules that define them. Hook classes should all be seen at load time, and placing that logic in ``kolibri_plugin`` guarantees that things are registered correctly."
msgstr "crwdns15371:0crwdne15371:0"

#: ../../dev/plugins.rst:19
msgid "Other stuff you can do with plugins"
msgstr "crwdns15372:0crwdne15372:0"

#: ../../dev/plugins.rst:21
msgid "Plugins can implement Javascript code as a Kolibri module that can be used in the frontend as a plugin to the core Kolibri Javascript code. Each of these Javascript plugins are defined in the `kolibri_plugin.py` file by subclassing the ``KolibriFrontEndPluginBase`` class to define each frontend Kolibri module. This defines the base Javascript file that defines the Kolibri module. In addition, this Plugin object within the app will automatically add these Kolibri modules to an internal frontend asset registry for loading in the front end. For more information on developing frontend code for Kolibri please see :doc:`frontend`."
msgstr "crwdns15373:0:doc:crwdne15373:0"

#: ../../dev/plugins.rst:28
msgid "Plugins can be standalone Django apps in their own right, meaning they can define templates, models, new urls, and views just like any other app. However the API for all of this hasn't yet been determined... Coming soon!"
msgstr "crwdns15374:0crwdne15374:0"

#: ../../dev/plugins.rst:33
msgid "Core plugin example"
msgstr "crwdns15375:0crwdne15375:0"

#: ../../dev/plugins.rst:35
msgid "View the source to learn more!"
msgstr "crwdns15376:0crwdne15376:0"

#: kolibri.core.kolibri_plugin.KolibriCore:1 of
msgid "The most minimal plugin possible. Because it's in the core, it doesn't define ``enable`` or ``disable``. Those methods should never be called for this plugin."
msgstr "crwdns15377:0crwdne15377:0"

#: ../../dev/stack.rst:2
msgid "Tech Stack"
msgstr "crwdns15378:0crwdne15378:0"

#: ../../dev/stack.rst:4
msgid "Kolibri is a web application built primarily using `Python <https://www.python.org/>`_ on the server-side and `JavaScript <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference>`_ on the client-side."
msgstr "crwdns15379:0crwdne15379:0"

#: ../../dev/stack.rst:6
msgid "We use many run-time, development, and build-related technologies and tools, as outlined below."
msgstr "crwdns15380:0crwdne15380:0"

#: ../../dev/stack.rst:10
msgid "Server"
msgstr "crwdns15381:0crwdne15381:0"

#: ../../dev/stack.rst:12
msgid "The server is a `Django 1.9 <https://docs.djangoproject.com/en/1.9/>`_ application, and contains only pure-Python (2.7+) libraries dependencies at run-time."
msgstr "crwdns15382:0crwdne15382:0"

#: ../../dev/stack.rst:14
msgid "The server is responsible for:"
msgstr "crwdns15383:0crwdne15383:0"

#: ../../dev/stack.rst:16
msgid "Interfacing with the database (`PostgreSQL <https://www.postgresql.org/>`_) containing user, content, and language pack data"
msgstr "crwdns15384:0crwdne15384:0"

#: ../../dev/stack.rst:17
msgid "Authentication and permission middleware"
msgstr "crwdns15385:0crwdne15385:0"

#: ../../dev/stack.rst:18
msgid "Routing and handling of API calls, using the `Django REST Framework <http://www.django-rest-framework.org/>`_"
msgstr "crwdns15386:0crwdne15386:0"

#: ../../dev/stack.rst:19
msgid "Basic top-level URL routing between high-level sections of the application"
msgstr "crwdns15387:0crwdne15387:0"

#: ../../dev/stack.rst:20
msgid "Serving basic HTML wrappers for the UI with data bootstrapped into the page"
msgstr "crwdns15388:0crwdne15388:0"

#: ../../dev/stack.rst:21
msgid "Serving additional client assets such as fonts and images"
msgstr "crwdns15389:0crwdne15389:0"

#: ../../dev/stack.rst:23
msgid "*TODO - how does Morango fit into this picture? Logging?*"
msgstr "crwdns15390:0crwdne15390:0"

#: ../../dev/stack.rst:27
msgid "Client"
msgstr "crwdns15391:0crwdne15391:0"

#: ../../dev/stack.rst:29
msgid "The front-end user interface is built using HTML, the `Stylus <http://stylus-lang.com/>`_ CSS-preprocessing language, and the `ES2015 preset features of ES6 <https://babeljs.io/docs/plugins/preset-es2015/>`_ JavaScript."
msgstr "crwdns15392:0crwdne15392:0"

#: ../../dev/stack.rst:31
msgid "The frontend targets IE9 and up, with an emphasis on tablet-size screens. We strive to use accessible, semantic HTML with support for screen readers, keyboard interaction, and right-to-left language support."
msgstr "crwdns15393:0crwdne15393:0"

#: ../../dev/stack.rst:33
msgid "The client is responsible for:"
msgstr "crwdns15394:0crwdne15394:0"

#: ../../dev/stack.rst:35
msgid "Compositing and rendering the UI using `Vue.js <https://vuejs.org/>`_ components to build nested views"
msgstr "crwdns15395:0crwdne15395:0"

#: ../../dev/stack.rst:36
msgid "Managing client-side state using `Vuex <http://vuex.vuejs.org/en/index.html>`_"
msgstr "crwdns15396:0crwdne15396:0"

#: ../../dev/stack.rst:37
msgid "Interacting with the server through HTTP requests"
msgstr "crwdns15397:0crwdne15397:0"

#: ../../dev/stack.rst:39
msgid "Additionally, `loglevel <http://pimterry.github.io/loglevel/>`_ is used for logging and `normalize.css <https://necolas.github.io/normalize.css/>`_ is included for browser style normalization."
msgstr "crwdns15398:0crwdne15398:0"

#: ../../dev/stack.rst:43
msgid "Internationalization"
msgstr "crwdns15399:0crwdne15399:0"

#: ../../dev/stack.rst:45
msgid "We leverage the `ICU Message <http://userguide.icu-project.org/formatparse/messages>`_ syntax for formatting all user-facing text."
msgstr "crwdns15400:0crwdne15400:0"

#: ../../dev/stack.rst:47
msgid "On the client-side, these strings are rendered using `Format.js <http://formatjs.io/>`_ and integrated with Vue.js using `vue-intl <https://github.com/learningequality/vue-intl>`_."
msgstr "crwdns15401:0crwdne15401:0"

#: ../../dev/stack.rst:49
msgid "*TODO: server-side, message extraction, translation*"
msgstr "crwdns15402:0crwdne15402:0"

#: ../../dev/stack.rst:53
msgid "Developer Docs"
msgstr "crwdns15403:0crwdne15403:0"

#: ../../dev/stack.rst:55
msgid "Documentation for Kolibri developers are formatted using `reStructuredText <http://docutils.sourceforge.net/rst.html>`_ and the output is generated using `Sphinx <http://www.sphinx-doc.org/en/stable/rest.html>`_. Most of the content is in the ``/docs`` directory, but some content is also extracted from Python source code and from files in the root directory. We use `Read the Docs <http://kolibri.readthedocs.io/en/latest/>`_ to host a public version of our documentation."
msgstr "crwdns15404:0crwdne15404:0"

#: ../../dev/stack.rst:57
msgid "Additionally, information about the design and implementation of Kolibri might be found on Google Drive, Trello, Slack, InVision, mailing lists, office whiteboards, and lurking in the fragmented collective consciousness of our contributors."
msgstr "crwdns15405:0crwdne15405:0"

#: ../../dev/stack.rst:61
msgid "Build Infrastructure"
msgstr "crwdns15406:0crwdne15406:0"

#: ../../dev/stack.rst:64
msgid "Client-side Resources"
msgstr "crwdns15407:0crwdne15407:0"

#: ../../dev/stack.rst:66
msgid "We use a combination of both `Node.js <https://nodejs.org/en/>`_ and Python scripts to transform our source code as-written to the code that is run in a browser. This process involves `webpack <https://webpack.github.io/>`_, plus a number of both custom and third-party extensions."
msgstr "crwdns15408:0crwdne15408:0"

#: ../../dev/stack.rst:68
msgid "Preparation of client-side resources involves:"
msgstr "crwdns15409:0crwdne15409:0"

#: ../../dev/stack.rst:70
msgid "ES6 to ES5"
msgstr "crwdns15410:0crwdne15410:0"

#: ../../dev/stack.rst:71
msgid "Transforming Vue.js component files (\\*.vue) into JS and CSS"
msgstr "crwdns15411:0crwdne15411:0"

#: ../../dev/stack.rst:72
msgid "Stylus to CSS"
msgstr "crwdns15412:0crwdne15412:0"

#: ../../dev/stack.rst:73
msgid "Auto-prefixing CSS"
msgstr "crwdns15413:0crwdne15413:0"

#: ../../dev/stack.rst:74
msgid "Bundling multiple JS dependencies into single files"
msgstr "crwdns15414:0crwdne15414:0"

#: ../../dev/stack.rst:75
msgid "Minifying and compressing code"
msgstr "crwdns15415:0crwdne15415:0"

#: ../../dev/stack.rst:76
msgid "Bundle resources such as fonts and images"
msgstr "crwdns15416:0crwdne15416:0"

#: ../../dev/stack.rst:77
msgid "Generating source maps"
msgstr "crwdns15417:0crwdne15417:0"

#: ../../dev/stack.rst:78
msgid "Providing mechanisms for decoupled \"Kolibri plugins\" to interact with each other and asynchronously load dependencies"
msgstr "crwdns15418:0crwdne15418:0"

#: ../../dev/stack.rst:79
msgid "Linting to enforce code styles"
msgstr "crwdns15419:0crwdne15419:0"

#: ../../dev/stack.rst:83
msgid "Server Setup"
msgstr "crwdns15420:0crwdne15420:0"

#: ../../dev/stack.rst:85
msgid "The standard `Django manage.py commands <https://docs.djangoproject.com/en/1.9/ref/django-admin/>`_ are used under-the-hood for database migration and user set-up."
msgstr "crwdns15421:0crwdne15421:0"

#: ../../dev/stack.rst:87
msgid "*TODO: is this accurate?*"
msgstr "crwdns15422:0crwdne15422:0"

#: ../../dev/stack.rst:91
msgid "Installers and Packages"
msgstr "crwdns15423:0crwdne15423:0"

#: ../../dev/stack.rst:93
msgid "*TODO: introduce stack (sdist, PyPi, Debian, Windows, etc)*"
msgstr "crwdns15424:0crwdne15424:0"

#: ../../dev/stack.rst:97
msgid "Continuous Integration"
msgstr "crwdns15425:0crwdne15425:0"

#: ../../dev/stack.rst:99
msgid "*TODO: introduce stack (GitHub, CodeCov, Travis, commit hooks)*"
msgstr "crwdns15426:0crwdne15426:0"

#: ../../dev/stack.rst:104
msgid "Tests and Linting"
msgstr "crwdns15427:0crwdne15427:0"

#: ../../dev/stack.rst:106
msgid "We use a number of mechanisms to help encourage code quality and consistency. These checks enforce a subset of our :doc:`conventions`."
msgstr "crwdns15428:0:doc:crwdne15428:0"

#: ../../dev/stack.rst:108
msgid "`pre-commit <http://pre-commit.com/>`_ is run locally on ``git commit`` and enforces some Python conventions"
msgstr "crwdns15429:0crwdne15429:0"

#: ../../dev/stack.rst:109
msgid "We use `EditorConfig <http://editorconfig.org/>`_ to help developers set their editor preferences"
msgstr "crwdns15430:0crwdne15430:0"

#: ../../dev/stack.rst:110
msgid "`flake8 <https://flake8.readthedocs.io/en/latest/>`_ is also used to enforce Python conventions"
msgstr "crwdns15431:0crwdne15431:0"

#: ../../dev/stack.rst:111
msgid "`tox <https://tox.readthedocs.io/en/latest/>`_ is used to run our test suites under a range of Python and Node environment versions"
msgstr "crwdns15432:0crwdne15432:0"

#: ../../dev/stack.rst:112
msgid "``sphinx-build -b linkcheck`` checks the validity of documentation links"
msgstr "crwdns15433:0crwdne15433:0"

#: ../../dev/stack.rst:113
msgid "`pytest <http://pytest.org/latest/>`_ runs our Python unit tests. We also leverage the `Django test framework <https://docs.djangoproject.com/en/1.9/topics/testing/>`_."
msgstr "crwdns15434:0crwdne15434:0"

#: ../../dev/stack.rst:114
msgid "In addition to building client assets, `webpack <https://webpack.github.io/>`_ runs linters on client-side code: `ESLint <http://eslint.org/>`_ for ES6 JavaScript, `Stylint <https://rosspatton.github.io/stylint/>`_ for Stylus, and `HTMLHint <http://htmlhint.com/>`_ for HTML and Vue.js components."
msgstr "crwdns15435:0crwdne15435:0"

#: ../../dev/stack.rst:115
msgid "Client-side code is tested using a stack of tools including `Karma <https://karma-runner.github.io/0.13/index.html>`_, `Mocha <https://mochajs.org/>`_, `PhantomJS <http://phantomjs.org/>`_, `Sinon <http://sinonjs.org/>`_, and `rewire <https://github.com/jhnns/rewire>`_. *TODO: Explain what each of these do*"
msgstr "crwdns15436:0crwdne15436:0"

#: ../../dev/stack.rst:116
msgid "`codecov <https://codecov.io/>`_ reports on the test coverage for Python and Node.js code. *TODO - also client-side?*"
msgstr "crwdns15437:0crwdne15437:0"

#: ../../dev/stack.rst:120
msgid "Helper Scripts"
msgstr "crwdns15438:0crwdne15438:0"

#: ../../dev/stack.rst:122
msgid "*TODO: introduce stack (kolibri command, setup.py, makefiles, yarn commands, sphinx auto-build, etc)*"
msgstr "crwdns15439:0crwdne15439:0"

#: ../../dev/tests.rst:2
msgid "Tests"
msgstr "crwdns15440:0crwdne15440:0"

#: ../../dev/tests.rst:5
msgid "Running the test suite"
msgstr "crwdns15441:0crwdne15441:0"

#: ../../dev/tests.rst:7
msgid "A prerequisite for testing is to have the test environment installed. As a developer, simply fetch the \"dev\" requirements::"
msgstr "crwdns15442:0crwdne15442:0"

#: ../../dev/tests.rst:12
msgid "Running all the tests in your local environment::"
msgstr "crwdns15443:0crwdne15443:0"

#: ../../dev/tests.rst:16
msgid "Running tests with a specific Python version:"
msgstr "crwdns15444:0crwdne15444:0"

#: ../../dev/tests.rst:18
msgid "$ tox -e py2.7  # or... $ tox -e py3.4  # or... $ tox -e py3.5  # or... $ tox -e bdd"
msgstr "crwdns15445:0crwdne15445:0"

#: ../../dev/tests.rst:23
msgid "The 'bdd' tests are the \"Behavior Driven Development\" tests, i.e. the heavier user interface tests."
msgstr "crwdns15446:0crwdne15446:0"

#: ../../dev/tests.rst:26
msgid "To run a subset of tests::"
msgstr "crwdns15447:0crwdne15447:0"

#: ../../dev/tests.rst:32
msgid "JS unit tests"
msgstr "crwdns15448:0crwdne15448:0"

#: ../../dev/tests.rst:34
msgid "TODO! This will be written by one of the JS devs :)"
msgstr "crwdns15449:0crwdne15449:0"

#: ../../dev/tests.rst:37
msgid "Testing philosophy"
msgstr "crwdns15450:0crwdne15450:0"

#: ../../dev/tests.rst:40
msgid "This section an unfinished draft. We should carefully import stuff from our Dev Bible."
msgstr "crwdns15451:0crwdne15451:0"

#: ../../dev/tests.rst:43
msgid "We want to achieve a ``>90%`` test coverage! To do that, it's best to do TDD, meaning to write tests that express what you want to achieve or fix and then implement that feature or fix the bug."
msgstr "crwdns15452:0crwdne15452:0"

#: ../../dev/tests.rst:47
msgid "At all costs? No, definitely not. We don't want too many slow integration tests that depend on virtual browsers (Selenium) and the like."
msgstr "crwdns15453:0crwdne15453:0"

#: ../../dev/tests.rst:50
msgid "Unreliable tests? Are not welcome at all."
msgstr "crwdns15454:0crwdne15454:0"

#: ../../dev/tests.rst:53
msgid "Writing tests"
msgstr "crwdns15455:0crwdne15455:0"

#: ../../dev/tests.rst:55
msgid "Kolibri has a test discoverer (``py.test``) which automatically detects Python modules with test cases."
msgstr "crwdns15456:0crwdne15456:0"

#: ../../dev/tests.rst:58
msgid "Inside the module that your tests target, place a package ``test`` and files called ``test_my_module.py``::"
msgstr "crwdns15457:0crwdne15457:0"

#: ../../dev/uap.rst:2
msgid "Users, Authentication, and Permissions"
msgstr "crwdns15458:0crwdne15458:0"

#: ../../dev/uap.rst:4
msgid "This is a core module found in ``kolibri/auth``."
msgstr "crwdns15459:0crwdne15459:0"

#: kolibri.auth.models:1 of
msgid "We have four main abstractions: Users, Collections, Memberships, and Roles."
msgstr "crwdns15460:0crwdne15460:0"

#: kolibri.auth.models:3 of
msgid "Users represent people, like students in a school, teachers for a classroom, or volunteers setting up informal installations. There are two main user types, ``FacilityUser`` and ``DeviceOwner``. A ``FacilityUser`` belongs to a particular facility, and has permissions only with respect to other data that is associated with that facility. A ``DeviceOwner`` is not associated with a particular facility, and has global permissions for data on the local device. ``FacilityUser`` accounts (like other facility data) may be synced across multiple devices, whereas a DeviceOwner account is specific to a single installation of Kolibri."
msgstr "crwdns15461:0crwdne15461:0"

#: kolibri.auth.models:10 of
msgid "Collections form a hierarchy, with Collections able to belong to other Collections. Collections are subdivided into several pre-defined levels (``Facility`` > ``Classroom`` > ``LearnerGroup``)."
msgstr "crwdns15462:0crwdne15462:0"

#: kolibri.auth.models:13 of
msgid "A ``FacilityUser`` (but not a ``DeviceOwner``) can be marked as a member of a ``Collection`` through a ``Membership`` object. Being a member of a Collection also means being a member of all the Collections above that Collection in the hierarchy."
msgstr "crwdns15463:0crwdne15463:0"

#: ../../dev/uap/concepts_and_definitions.rst:65 kolibri.auth.models:17 of
msgid "Another way in which a ``FacilityUser`` can be associated with a particular ``Collection`` is through a ``Role`` object, which grants the user a role with respect to the ``Collection`` and all the collections below it. A ``Role`` object also stores the \"kind\" of the role (currently, one of \"admin\" or \"coach\"), which affects what permissions the user gains through the ``Role``."
msgstr "crwdns15464:0crwdne15464:0"

#: kolibri.auth.models.AbstractFacilityDataModel:1 of
msgid "Base model for Kolibri \"Facility Data\", which is data that is specific to a particular ``Facility``, such as ``FacilityUsers``, ``Collections``, and other data associated with those users and collections."
msgstr "crwdns15465:0crwdne15465:0"

#: kolibri.auth.models.AbstractFacilityDataModel.ensure_dataset:1 of
msgid "If no dataset has yet been specified, try to infer it. If a dataset has already been specified, to prevent inconsistencies, make sure it matches the inferred dataset, otherwise raise a ``KolibriValidationError``. If we have no dataset and it can't be inferred, we raise a ``KolibriValidationError`` exception as well."
msgstr "crwdns15466:0crwdne15466:0"

#: kolibri.auth.models.AbstractFacilityDataModel.infer_dataset:1 of
msgid "This method is used by `ensure_dataset` to \"infer\" which dataset should be associated with this instance. It should be overridden in any subclass of ``AbstractFacilityDataModel``, to define a model-specific inference."
msgstr "crwdns15467:0crwdne15467:0"

#: kolibri.auth.models.Classroom.get_facility:1 of
msgid "Gets the ``Classroom``'s parent ``Facility``."
msgstr "crwdns15468:0crwdne15468:0"

#: kolibri.auth.models.Classroom.get_facility
#: kolibri.auth.models.Classroom.get_learner_groups
#: kolibri.auth.models.Collection.add_member
#: kolibri.auth.models.Collection.add_role
#: kolibri.auth.models.Collection.remove_member
#: kolibri.auth.models.Facility.get_classrooms
#: kolibri.auth.models.KolibriAbstractBaseUser.can_create
#: kolibri.auth.models.KolibriAbstractBaseUser.can_create_instance
#: kolibri.auth.models.KolibriAbstractBaseUser.can_delete
#: kolibri.auth.models.KolibriAbstractBaseUser.can_read
#: kolibri.auth.models.KolibriAbstractBaseUser.can_update
#: kolibri.auth.models.KolibriAbstractBaseUser.filter_readable
#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_collection
#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_user
#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_collection
#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_user
#: kolibri.auth.models.KolibriAbstractBaseUser.is_member_of
#: kolibri.auth.models.LearnerGroup.get_classroom of
msgid "Returns"
msgstr "crwdns15469:0crwdne15469:0"

#: kolibri.auth.models.Classroom.get_facility:3 of
msgid "A ``Facility`` instance."
msgstr "crwdns15470:0crwdne15470:0"

#: kolibri.auth.models.Classroom.get_learner_groups:1 of
msgid "Returns a ``QuerySet`` of ``LearnerGroups`` associated with this ``Classroom``."
msgstr "crwdns15471:0crwdne15471:0"

#: kolibri.auth.models.Classroom.get_learner_groups:3 of
msgid "A ``LearnerGroup`` ``QuerySet``."
msgstr "crwdns15472:0crwdne15472:0"

#: kolibri.auth.models.Collection:1 of
msgid "``Collections`` are hierarchical groups of ``FacilityUsers``, used for grouping users and making decisions about permissions. ``FacilityUsers`` can have roles for one or more ``Collections``, by way of obtaining ``Roles`` associated with those ``Collections``. ``Collections`` can belong to other ``Collections``, and user membership in a ``Collection`` is conferred through ``Memberships``. ``Collections`` are subdivided into several pre-defined levels."
msgstr "crwdns15473:0crwdne15473:0"

#: kolibri.auth.models.Collection.add_member:1 of
msgid "Create a ``Membership`` associating the provided user with this ``Collection``. If the ``Membership`` object already exists, just return that, without changing anything."
msgstr "crwdns15474:0crwdne15474:0"

#: kolibri.auth.models.Collection.add_member:4 of
msgid "The ``FacilityUser`` to add to this ``Collection``."
msgstr "crwdns15475:0crwdne15475:0"

#: kolibri.auth.models.Collection.add_member:5 of
msgid "The ``Membership`` object (possibly new) that associates the user with the ``Collection``."
msgstr "crwdns15476:0crwdne15476:0"

#: kolibri.auth.models.Collection.add_role:1 of
msgid "Create a ``Role`` associating the provided user with this collection, with the specified kind of role. If the Role object already exists, just return that, without changing anything."
msgstr "crwdns15477:0crwdne15477:0"

#: kolibri.auth.models.Collection.add_role:4 of
msgid "The ``FacilityUser`` to associate with this ``Collection``."
msgstr "crwdns15478:0crwdne15478:0"

#: kolibri.auth.models.Collection.add_role:5 of
msgid "The kind of role to give the user with respect to this ``Collection``."
msgstr "crwdns15479:0crwdne15479:0"

#: kolibri.auth.models.Collection.add_role:6 of
msgid "The ``Role`` object (possibly new) that associates the user with the ``Collection``."
msgstr "crwdns15480:0crwdne15480:0"

#: kolibri.auth.models.Collection.remove_member:1 of
msgid "Remove any ``Membership`` objects associating the provided user with this ``Collection``."
msgstr "crwdns15481:0crwdne15481:0"

#: kolibri.auth.models.Collection.remove_member:3 of
msgid "The ``FacilityUser`` to remove from this ``Collection``."
msgstr "crwdns15482:0crwdne15482:0"

#: kolibri.auth.models.Collection.remove_member:4 of
msgid "``True`` if a ``Membership`` was removed, ``False`` if there was no matching ``Membership`` to remove."
msgstr "crwdns15483:0crwdne15483:0"

#: kolibri.auth.models.Collection.remove_role:1 of
msgid "Remove any ``Role`` objects associating the provided user with this ``Collection``, with the specified kind of role."
msgstr "crwdns15484:0crwdne15484:0"

#: kolibri.auth.models.Collection.remove_role:3 of
msgid "The ``FacilityUser`` to dissociate from this ``Collection`` (for the specific role kind)."
msgstr "crwdns15485:0crwdne15485:0"

#: kolibri.auth.models.Collection.remove_role:4 of
msgid "The kind of role to remove from the user with respect to this ``Collection``."
msgstr "crwdns15486:0crwdne15486:0"

#: kolibri.auth.models.DeviceOwner:1 of
msgid "When a user first installs Kolibri on a device, they will be prompted to create a ``DeviceOwner``, a special kind of user which is associated with that device only, and who must give permission to make broad changes to the Kolibri installation on that device (such as creating a ``Facility``, or changing configuration settings)."
msgstr "crwdns15487:0crwdne15487:0"

#: kolibri.auth.models.DeviceOwner:5 of
msgid "Actions not relating to user data but specifically to a device -- like upgrading Kolibri, changing whether the device is a Classroom Server or Classroom Client, or determining manually which data should be synced -- must be performed by a ``DeviceOwner``."
msgstr "crwdns15488:0crwdne15488:0"

#: kolibri.auth.models.DeviceOwner:9 of
msgid "A ``DeviceOwner`` is a superuser, and has full access to do anything she wants with data on the device."
msgstr "crwdns15489:0crwdne15489:0"

#: kolibri.auth.models.DeviceOwner:13 kolibri.auth.models.FacilityUser:6
#: kolibri.auth.models.KolibriAbstractBaseUser:7
#: kolibri.auth.models.KolibriAnonymousUser:3 of
msgid "Password"
msgstr "crwdns15490:0crwdne15490:0"

#: kolibri.auth.models.DeviceOwner:15 kolibri.auth.models.FacilityUser:8
#: kolibri.auth.models.KolibriAbstractBaseUser:9
#: kolibri.auth.models.KolibriAnonymousUser:5 of
msgid "Last login"
msgstr "crwdns15491:0crwdne15491:0"

#: kolibri.auth.models.DeviceOwner:17 kolibri.auth.models.FacilityUser:12
#: kolibri.auth.models.KolibriAbstractBaseUser:11
#: kolibri.auth.models.KolibriAnonymousUser:7 of
msgid "Required. 30 characters or fewer. Letters and digits only"
msgstr "crwdns15492:0crwdne15492:0"

#: kolibri.auth.models.DeviceOwner:19 kolibri.auth.models.FacilityUser:14
#: kolibri.auth.models.KolibriAbstractBaseUser:13
#: kolibri.auth.models.KolibriAnonymousUser:9 of
msgid "Full name"
msgstr "crwdns15493:0crwdne15493:0"

#: kolibri.auth.models.DeviceOwner:21 kolibri.auth.models.FacilityUser:16
#: kolibri.auth.models.KolibriAbstractBaseUser:15
#: kolibri.auth.models.KolibriAnonymousUser:11 of
msgid "Date joined"
msgstr "crwdns15494:0crwdne15494:0"

#: kolibri.auth.models.Facility.get_classrooms:1 of
msgid "Returns a QuerySet of Classrooms under this Facility."
msgstr "crwdns15495:0crwdne15495:0"

#: kolibri.auth.models.Facility.get_classrooms:3 of
msgid "A Classroom QuerySet."
msgstr "crwdns15496:0crwdne15496:0"

#: kolibri.auth.models.FacilityDataset:1 of
msgid "``FacilityDataset`` stores high-level metadata and settings for a particular ``Facility``. It is also the model that all models storing facility data (data that is associated with a particular facility, and that inherits from ``AbstractFacilityDataModel``) foreign key onto, to indicate that they belong to this particular ``Facility``."
msgstr "crwdns15497:0crwdne15497:0"

#: kolibri.auth.models.FacilityDataset:9 of
msgid "Location"
msgstr "crwdns15498:0crwdne15498:0"

#: kolibri.auth.models.FacilityDataset:11 of
msgid "Learner can edit username"
msgstr "crwdns15499:0crwdne15499:0"

#: kolibri.auth.models.FacilityDataset:13 of
msgid "Learner can edit name"
msgstr "crwdns15500:0crwdne15500:0"

#: kolibri.auth.models.FacilityDataset:15 of
msgid "Learner can edit password"
msgstr "crwdns15501:0crwdne15501:0"

#: kolibri.auth.models.FacilityDataset:17 of
msgid "Learner can sign up"
msgstr "crwdns15502:0crwdne15502:0"

#: kolibri.auth.models.FacilityDataset:19 of
msgid "Learner can delete account"
msgstr "crwdns15503:0crwdne15503:0"

#: kolibri.auth.models.FacilityUser:1 of
msgid "``FacilityUser`` is the fundamental object of the auth app. These users represent the main users, and can be associated with a hierarchy of ``Collections`` through ``Memberships`` and ``Roles``, which then serve to help determine permissions."
msgstr "crwdns15504:0crwdne15504:0"

#: ../../dev/uap/concepts_and_definitions.rst:5
#: kolibri.auth.models.FacilityUser:18 of
msgid "Facility"
msgstr "crwdns15505:0crwdne15505:0"

#: kolibri.auth.models.KolibriAbstractBaseUser:1 of
msgid "Our custom user type, derived from ``AbstractBaseUser`` as described in the Django docs. Draws liberally from ``django.contrib.auth.AbstractUser``, except we exclude some fields we don't care about, like email."
msgstr "crwdns15506:0crwdne15506:0"

#: kolibri.auth.models.KolibriAbstractBaseUser:5 of
msgid "This model is an abstract model, and is inherited by both ``FacilityUser`` and ``DeviceOwner``."
msgstr "crwdns15507:0crwdne15507:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create:1 of
msgid "Checks whether this user (self) has permission to create an instance of Model with the specified attributes (data)."
msgstr "crwdns15508:0crwdne15508:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create:3 of
msgid "This method defers to the ``can_create_instance`` method, and in most cases should not itself be overridden."
msgstr "crwdns15509:0crwdne15509:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create:5 of
msgid "A subclass of ``django.db.models.Model``"
msgstr "crwdns15510:0crwdne15510:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create:6 of
msgid "A ``dict`` of data to be used in creating an instance of the Model"
msgstr "crwdns15511:0crwdne15511:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create:7 of
msgid "``True`` if this user should have permission to create an instance of Model with the specified data, else ``False``."
msgstr "crwdns15512:0crwdne15512:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create
#: kolibri.auth.models.KolibriAbstractBaseUser.can_create_instance
#: kolibri.auth.models.KolibriAbstractBaseUser.can_delete
#: kolibri.auth.models.KolibriAbstractBaseUser.can_read
#: kolibri.auth.models.KolibriAbstractBaseUser.can_update
#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_collection
#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_user
#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_collection
#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_user
#: kolibri.auth.models.KolibriAbstractBaseUser.is_member_of of
msgid "Return type"
msgstr "crwdns15513:0crwdne15513:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create_instance:1 of
msgid "Checks whether this user (self) has permission to create a particular model instance (obj)."
msgstr "crwdns15514:0crwdne15514:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create_instance:3
#: kolibri.auth.models.KolibriAbstractBaseUser.can_read:3 of
msgid "This method should be overridden by classes that inherit from ``KolibriAbstractBaseUser``."
msgstr "crwdns15515:0crwdne15515:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create_instance:5 of
msgid "In general, unless an instance has already been initialized, this method should not be called directly; instead, it should be preferred to call ``can_create``."
msgstr "crwdns15516:0crwdne15516:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create_instance:8 of
msgid "An (unsaved) instance of a Django model, to check permissions for."
msgstr "crwdns15517:0crwdne15517:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_create_instance:9 of
msgid "``True`` if this user should have permission to create the object, otherwise ``False``."
msgstr "crwdns15518:0crwdne15518:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_delete:1 of
msgid "Checks whether this user (self) has permission to delete a particular model instance (obj)."
msgstr "crwdns15519:0crwdne15519:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_delete:3
#: kolibri.auth.models.KolibriAbstractBaseUser.can_update:3 of
msgid "This method should be overridden by classes that inherit from KolibriAbstractBaseUser."
msgstr "crwdns15520:0crwdne15520:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_delete:5
#: kolibri.auth.models.KolibriAbstractBaseUser.can_read:5
#: kolibri.auth.models.KolibriAbstractBaseUser.can_update:5 of
msgid "An instance of a Django model, to check permissions for."
msgstr "crwdns15521:0crwdne15521:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_delete:6 of
msgid "``True`` if this user should have permission to delete the object, otherwise ``False``."
msgstr "crwdns15522:0crwdne15522:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_read:1 of
msgid "Checks whether this user (self) has permission to read a particular model instance (obj)."
msgstr "crwdns15523:0crwdne15523:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_read:6 of
msgid "``True`` if this user should have permission to read the object, otherwise ``False``."
msgstr "crwdns15524:0crwdne15524:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_update:1 of
msgid "Checks whether this user (self) has permission to update a particular model instance (obj)."
msgstr "crwdns15525:0crwdne15525:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.can_update:6 of
msgid "``True`` if this user should have permission to update the object, otherwise ``False``."
msgstr "crwdns15526:0crwdne15526:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.filter_readable:1 of
msgid "Filters a queryset down to only the elements that this user should have permission to read."
msgstr "crwdns15527:0crwdne15527:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.filter_readable:3 of
msgid "A ``QuerySet`` instance that the filtering should be applied to."
msgstr "crwdns15528:0crwdne15528:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.filter_readable:4 of
msgid "Filtered ``QuerySet`` including only elements that are readable by this user."
msgstr "crwdns15529:0crwdne15529:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for:1 of
msgid "Helper function that defers to ``get_roles_for_user`` or ``get_roles_for_collection`` based on the type of object passed in."
msgstr "crwdns15530:0crwdne15530:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_collection:1 of
msgid "Determine all the roles this user has in relation to the specified ``Collection``, and return a set containing the kinds of roles."
msgstr "crwdns15531:0crwdne15531:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_collection:3
#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_collection:5 of
msgid "The target ``Collection`` for which this user has the roles."
msgstr "crwdns15532:0crwdne15532:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_collection:4 of
msgid "The kinds of roles this user has with respect to the specified ``Collection``."
msgstr "crwdns15533:0crwdne15533:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_collection:5
#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_user:5 of
msgid "set of ``kolibri.auth.constants.role_kinds.*`` strings"
msgstr "crwdns15534:0crwdne15534:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_user:1 of
msgid "Determine all the roles this user has in relation to the target user, and return a set containing the kinds of roles."
msgstr "crwdns15535:0crwdne15535:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_user:3 of
msgid "The target user for which this user has the roles."
msgstr "crwdns15536:0crwdne15536:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.get_roles_for_user:4 of
msgid "The kinds of roles this user has with respect to the target user."
msgstr "crwdns15537:0crwdne15537:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for:1 of
msgid "Helper function that defers to ``has_role_for_user`` or ``has_role_for_collection`` based on the type of object passed in."
msgstr "crwdns15538:0crwdne15538:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_collection:1 of
msgid "Determine whether this user has (at least one of) the specified role kind(s) in relation to the specified ``Collection``."
msgstr "crwdns15539:0crwdne15539:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_collection:3
#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_user:4 of
msgid "The kind (or kinds) of role to check for, as a string or iterable."
msgstr "crwdns15540:0crwdne15540:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_collection:6 of
msgid "``True`` if this user has the specified role kind with respect to the target ``Collection``, otherwise ``False``."
msgstr "crwdns15541:0crwdne15541:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_user:1 of
msgid "Determine whether this user has (at least one of) the specified role kind(s) in relation to the specified user."
msgstr "crwdns15542:0crwdne15542:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_user:3 of
msgid "The user that is the target of the role (for which this user has the roles)."
msgstr "crwdns15543:0crwdne15543:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.has_role_for_user:6 of
msgid "``True`` if this user has the specified role kind with respect to the target user, otherwise ``False``."
msgstr "crwdns15544:0crwdne15544:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.is_member_of:1 of
msgid "Determine whether this user is a member of the specified ``Collection``."
msgstr "crwdns15545:0crwdne15545:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.is_member_of:3 of
msgid "The ``Collection`` for which we are checking this user's membership."
msgstr "crwdns15546:0crwdne15546:0"

#: kolibri.auth.models.KolibriAbstractBaseUser.is_member_of:4 of
msgid "``True`` if this user is a member of the specified ``Collection``, otherwise False."
msgstr "crwdns15547:0crwdne15547:0"

#: kolibri.auth.models.KolibriAnonymousUser:1 of
msgid "Custom anonymous user that also exposes the same interface as KolibriAbstractBaseUser, for consistency."
msgstr "crwdns15548:0crwdne15548:0"

#: kolibri.auth.models.LearnerGroup.get_classroom:1 of
msgid "Gets the ``LearnerGroup``'s parent ``Classroom``."
msgstr "crwdns15549:0crwdne15549:0"

#: kolibri.auth.models.LearnerGroup.get_classroom:3 of
msgid "A ``Classroom`` instance."
msgstr "crwdns15550:0crwdne15550:0"

#: kolibri.auth.models.Membership:1 of
msgid "A ``FacilityUser`` can be marked as a member of a ``Collection`` through a ``Membership`` object. Being a member of a ``Collection`` also means being a member of all the ``Collections`` above that ``Collection`` in the tree (i.e. if you are a member of a ``LearnerGroup``, you are also a member of the ``Classroom`` that contains that ``LearnerGroup``, and of the ``Facility`` that contains that ``Classroom``)."
msgstr "crwdns15551:0crwdne15551:0"

#: kolibri.auth.models.Membership:12 kolibri.auth.models.Role:12 of
msgid "Collection"
msgstr "crwdns15552:0crwdne15552:0"

#: kolibri.auth.models.Role:1 of
msgid "A ``FacilityUser`` can have a role for a particular ``Collection`` through a ``Role`` object, which also stores the \"kind\" of the ``Role`` (currently, one of \"admin\" or \"coach\"). Having a role for a ``Collection`` also implies having that role for all sub-collections of that ``Collection`` (i.e. all the ``Collections`` below it in the tree)."
msgstr "crwdns15553:0crwdne15553:0"

#: ../../dev/uap/concepts_and_definitions.rst:7
msgid "All user data (accounts, logs, ratings, etc) in Kolibri are associated with a particular \"Facility\". A Facility is a grouping of users who are physically co-located, and who generally access Kolibri from the same server on a local network, for example in a school, library, or community center. Collectively, all the data associated with a particular Facility are referred to as a \"Facility Dataset\"."
msgstr "crwdns15554:0crwdne15554:0"

#: ../../dev/uap/concepts_and_definitions.rst:15
msgid "Users"
msgstr "crwdns15555:0crwdne15555:0"

#: ../../dev/uap/concepts_and_definitions.rst:17
msgid "There are two kinds of users: ``FacilityUser`` and ``DeviceOwner``. A ``FacilityUser`` is associated with a particular ``Facility``, and the user's account and data may be synchronized across multiple devices. A ``DeviceOwner`` account is not associated with a particular ``Facility``, but is specific to one device, and is never synchronized across multiple devices. A ``DeviceOwner`` is like a superuser, and has permissions to modify any data on her own device, whereas a ``FacilityUser`` only has permissions for some subset of data from their own Facility Dataset (as determined in part by the roles they possess; see below)."
msgstr "crwdns15556:0crwdne15556:0"

#: ../../dev/uap/concepts_and_definitions.rst:28
#: ../../dev/uap/implementation.rst:5
msgid "Collections"
msgstr "crwdns15557:0crwdne15557:0"

#: ../../dev/uap/concepts_and_definitions.rst:30
msgid "Collections are hierarchical groups of users, used for grouping users and making decisions about permissions. Users can have roles for one or more Collections, by way of obtaining Roles associated with those Collections. Collections can belong to other Collections, and user membership in a collection is conferred through Membership. Collections are subdivided into several pre-defined levels: Facility, Classroom, and LearnerGroup, as illustrated here:"
msgstr "crwdns15558:0crwdne15558:0"

#: ../../dev/uap/concepts_and_definitions.rst:41
msgid "In this illustration, Facility X contains two Classrooms, Class A and Class B. Class A contains two LearnerGroups, Group Q and Group R."
msgstr "crwdns15559:0crwdne15559:0"

#: ../../dev/uap/concepts_and_definitions.rst:45
msgid "Membership"
msgstr "crwdns15560:0crwdne15560:0"

#: ../../dev/uap/concepts_and_definitions.rst:47
msgid "A ``FacilityUser`` (but not a ``DeviceOwner``) can be marked as a member of a ``Collection`` through a ``Membership`` object. Being a member of a Collection also means being a member of all the Collections above that Collection in the hierarchy. Thus, in the illustration below, Alice is directly associated with Group Q through a ``Membership`` object, which makes her a member of Group Q. As Group Q is contained within Class A, which is contained within Facility X, she is also implicitly a member of both those collections."
msgstr "crwdns15561:0crwdne15561:0"

#: ../../dev/uap/concepts_and_definitions.rst:58
msgid "Note also that a ``FacilityUser`` is always implicitly a member of the ``Facility`` with which it is associated, even if it does not have any ``Membership`` objects."
msgstr "crwdns15562:0crwdne15562:0"

#: ../../dev/uap/concepts_and_definitions.rst:63
msgid "Roles"
msgstr "crwdns15563:0crwdne15563:0"

#: ../../dev/uap/concepts_and_definitions.rst:71
msgid "To illustrate, consider the example in the following figure:"
msgstr "crwdns15564:0crwdne15564:0"

#: ../../dev/uap/concepts_and_definitions.rst:76
msgid "The figure shows a Role object linking Bob with Class A, and the Role is marked with kind \"coach\", which we can informally read as \"Bob is a coach for Class A\". We consider user roles to be \"downward-transitive\" (meaning if you have a role for a collection, you also have that role for descendents of that collection). Thus, in our example, we can say that \"Bob is also a coach for Group Q\". Furthermore, as Alice is a member of Group Q, we can say that \"Bob is a coach for Alice\"."
msgstr "crwdns15565:0crwdne15565:0"

#: ../../dev/uap/concepts_and_definitions.rst:86
msgid "Role-Based Permissions"
msgstr "crwdns15566:0crwdne15566:0"

#: ../../dev/uap/concepts_and_definitions.rst:88
msgid "As a lot of Facility Data in Kolibri is associated with a particular ``FacilityUser``, for many objects we can concisely define a requesting user's permissions in terms of his or her roles for the object's associated User. For example, if a ``ContentLog`` represents a particular ``FacilityUser``'s interaction with a piece of content, we might decide that another ``FacilityUser`` can view the ``ContentLog`` if she is a coach (has the coach role) for the user. In our scenario above, this would mean that Bob would have read permissions for a ``ContentLog`` for which \"user=Alice\", by virtue of having the coach role for Alice."
msgstr "crwdns15567:0crwdne15567:0"

#: ../../dev/uap/concepts_and_definitions.rst:98
msgid "Some data may not be related to a particular user, but rather with a ``Collection`` (e.g. the ``Collection`` object itself, settings for a ``Collection``, or content assignments for a ``Collection``). Permissions for these objects can be defined in terms of the role the requesting User has with respect to the object's associated Collection. So, for example, we might allow Bob to assign content to Class A on the basis of him having the \"coach\" role for Class A."
msgstr "crwdns15568:0crwdne15568:0"

#: ../../dev/uap/concepts_and_definitions.rst:107
msgid "Permission Levels"
msgstr "crwdns15569:0crwdne15569:0"

#: ../../dev/uap/concepts_and_definitions.rst:109
msgid "As we are constructing a RESTful API for accessing data within Kolibri, the core actions for which we need to define permissions are the CRUD operations (Create, Read, Update, Delete). As Create, Update, and Delete permissions often go hand in hand, we can collectively refer to them as \"Write Permissions\"."
msgstr "crwdns15570:0crwdne15570:0"

#: ../../dev/uap/implementation.rst:7
msgid "A ``Collection`` is implemented as a Django model that inherits from `django-mptt's MPTTModel <http://django-mptt.github.io/django-mptt/>`_, which allows for efficient traversal and querying of the collection hierarchy. For convenience, the specific types of collections -- ``Facility``, ``Classroom``, and ``LearnerGroup`` -- are implemented as _proxy models of the main ``Collection`` model. There is a ``kind`` field on ``Collection`` that allows us to distinguish between these types, and the ``ModelManager`` for the proxy models returns only instances of the matching kind."
msgstr "crwdns15571:0crwdne15571:0"

#: ../../dev/uap/implementation.rst:18
msgid "From a ``Collection`` instance, you can traverse upwards in the tree with the ``parent`` field, and downwards via the ``children`` field (which is a reverse ``RelatedManager`` for the ``parent`` field)::"
msgstr "crwdns15572:0crwdne15572:0"

#: ../../dev/uap/implementation.rst:28
msgid "Note that the above methods (which are provided by ``MPTTModel``) return generic ``Collection`` instances, rather than specific proxy model instances. To retrieve parents and children as appropriate proxy models, use the helper methods provided on the proxy models, e.g.::"
msgstr "crwdns15573:0crwdne15573:0"

#: ../../dev/uap/implementation.rst:40
msgid "Facility and FacilityDataset"
msgstr "crwdns15574:0crwdne15574:0"

#: ../../dev/uap/implementation.rst:42
msgid "The ``Facility`` model (a proxy model for ``Collection``, as described above) is special in that it has no ``parent``; it is the root of a tree. A ``Facility`` model instance, and all other Facility Data associated with the ``Facility`` and its ``FacilityUsers``, inherits from ``AbstractFacilityDataModel``, which has a ``dataset`` field that foreign keys onto a common ``FacilityDataset`` instance. This makes it easy to check, for purposes of permissions or filtering data for synchronization, which instances are part of a particular Facility Dataset. The ``dataset`` field is automatically set during the ``save`` method, by calling the ``infer_dataset`` method, which must be overridden in every subclass of ``AbstractFacilityDataModel`` to return the dataset to associate with that instance."
msgstr "crwdns15575:0crwdne15575:0"

#: ../../dev/uap/implementation.rst:56
msgid "Efficient Hierarchy Calculations"
msgstr "crwdns15576:0crwdne15576:0"

#: ../../dev/uap/implementation.rst:58
msgid "In order to make decisions about whether a user has a certain permission for an object, we need an efficient way to retrieve the set of roles the user has in relation to that object. This involves traversing the Role table, Collection hierarchy, and possibly the Membership table, but we can delegate most of the work to the database engine (and leverage efficient hierarchy lookups afforded by MPTT). The following algorithms and explanations will refer to the naming in the following diagram:"
msgstr "crwdns15577:0crwdne15577:0"

#: ../../dev/uap/implementation.rst:69
msgid "In pseudocode, the query for \"What Roles does Source User have in relation to Target User?\" would be implemented in the following way::"
msgstr "crwdns15578:0crwdne15578:0"

#: ../../dev/uap/implementation.rst:81
msgid "At the database level, this can be written in the following way, as a single multi-table SQL query::"
msgstr "crwdns15579:0crwdne15579:0"

#: ../../dev/uap/implementation.rst:99
msgid "Similarly, performing a queryset filter like \"give me all ``ContentLogs`` associated with ``FacilityUsers`` for which Source User has an admin role\" can be written as::"
msgstr "crwdns15580:0crwdne15580:0"

#: ../../dev/uap/implementation.rst:124
msgid "Note the ``membership_table.user_id = contentlog_table.user_id`` condition, which links the role-membership-collection hierarchy subquery into the main query. We refer to this condition as the \"anchor\"."
msgstr "crwdns15581:0crwdne15581:0"

#: ../../dev/uap/implementation.rst:128
msgid "To facilitate making queries that leverage the role-membership-collection hierarchy, without needing to write custom SQL each time, we have implemented a ``HierarchyRelationsFilter`` helper class. The class is instantiated by passing in a queryset, and then exposes a ``filter_by_hierarchy`` method that allows various parts of the role-membership-collection hierarchy to be constrained, and anchored back into the queryset's main table. It then returns a filtered queryset (with appropriate conditions applied) upon which further filters or other queryset operations can be applied."
msgstr "crwdns15582:0crwdne15582:0"

#: ../../dev/uap/implementation.rst:137
msgid "The signature for ``filter_by_hierarchy`` is::"
msgstr "crwdns15583:0crwdne15583:0"

#: ../../dev/uap/implementation.rst:146
msgid "With the exception of ``role_kind`` (which is either a string or list of strings, of role kinds), these parameters accept either:"
msgstr "crwdns15584:0crwdne15584:0"

#: ../../dev/uap/implementation.rst:149
msgid "A model instance (either a ``FacilityUser`` or a ``Collection`` subclass, as appropriate) or its ID"
msgstr "crwdns15585:0crwdne15585:0"

#: ../../dev/uap/implementation.rst:151
msgid "An `F expression`_ that anchors some part of the hierarchy back into the base queryset model (the simplest usage is just to put the name of a field from the base model in the ``F`` function, but you can also indirectly reference fields of related models, e.g. ``F(\"collection__parent\")``)"
msgstr "crwdns15586:0crwdne15586:0"

#: ../../dev/uap/implementation.rst:158
msgid "For example, the ``ContentLog`` query described above (\"give me all ``ContentLogs`` associated with ``FacilityUsers`` for which Source User has an admin role\") can be implemented as::"
msgstr "crwdns15587:0crwdne15587:0"

#: ../../dev/uap/implementation.rst:169
msgid "Managing Roles and Memberships"
msgstr "crwdns15588:0crwdne15588:0"

#: ../../dev/uap/implementation.rst:171
msgid "User and ``Collection`` models have various helper methods for retrieving and modifying roles and memberships:"
msgstr "crwdns15589:0crwdne15589:0"

#: ../../dev/uap/implementation.rst:174
msgid "To get all the members of a collection (including those of its descendant collections), use ``Collection.get_members()``."
msgstr "crwdns15590:0crwdne15590:0"

#: ../../dev/uap/implementation.rst:176
msgid "To add or remove roles/memberships, use the ``add_role``, ``remove_role``, ``add_member``, and ``remove_member`` methods of ``Collection`` (or the additional convenience methods, such as ``add_admin``, that exist on the proxy models)."
msgstr "crwdns15591:0crwdne15591:0"

#: ../../dev/uap/implementation.rst:180
msgid "To check whether a user is a member of a ``Collection``, use ``KolibriAbstractBaseUser.is_member_of`` (for ``DeviceOwner``, this always returns ``False``)"
msgstr "crwdns15592:0crwdne15592:0"

#: ../../dev/uap/implementation.rst:183
msgid "To check whether a user has a particular kind of role for a collection or another user, use the ``has_role_for_collection`` and ``has_role_for_user`` methods of ``KolibriAbstractBaseUser``."
msgstr "crwdns15593:0crwdne15593:0"

#: ../../dev/uap/implementation.rst:186
msgid "To list all role kinds a user has for a collection or another user, use the ``get_roles_for_collection`` and ``get_roles_for_user`` methods of ``KolibriAbstractBaseUser``."
msgstr "crwdns15594:0crwdne15594:0"

#: ../../dev/uap/implementation.rst:193
msgid "Encoding Permission Rules"
msgstr "crwdns15595:0crwdne15595:0"

#: ../../dev/uap/implementation.rst:195
msgid "We need to associate a particular set of rules with each model, to specify the permissions that users should have in relation to instances of that model. While not all models have the same rules, there are some broad categories of models that do share the same rules (e.g. ContentInteractionLog, ContentSummaryLog, and UserSessionLog -- collectively, \"User Log Data\"). Hence, it is useful to encapsulate a permissions \"class\" that can be reused across models, and extended (through inheritance) if slightly different behavior is needed. These classes of permissions are defined as Python classes that inherit from kolibri.auth.permissions.base.BasePermissions, which defines the following overridable methods:"
msgstr "crwdns15596:0crwdne15596:0"

#: ../../dev/uap/implementation.rst:206
msgid "The following four Boolean (True/False) permission checks, corresponding to the \"CRUD\" operations: - ``user_can_create_object`` - ``user_can_read_object`` - ``user_can_update_object`` - ``user_can_delete_object``"
msgstr "crwdns15597:0crwdne15597:0"

#: ../../dev/uap/implementation.rst:212
msgid "The queryset-filtering ``readable_by_user_filter`` method, which takes in a queryset and returns a queryset filtered down to just objects that should be readable by the user."
msgstr "crwdns15598:0crwdne15598:0"

#: ../../dev/uap/implementation.rst:217
msgid "Associating Permissions with Models"
msgstr "crwdns15599:0crwdne15599:0"

#: ../../dev/uap/implementation.rst:219
msgid "A model is associated with a particular permissions class through a \"permissions\" attribute defined on the top level of the model class, referencing an instance of a Permissions class (a class that subclasses ``BasePermissions``). For example, to specify that a model ``ContentSummaryLog`` should draw its permissions rules from the ``UserLogPermissions`` class, modify the model definition as follows::"
msgstr "crwdns15600:0crwdne15600:0"

#: ../../dev/uap/implementation.rst:233
msgid "Specifying Role-Based Permissions"
msgstr "crwdns15601:0crwdne15601:0"

#: ../../dev/uap/implementation.rst:235
msgid "Defining a custom Permissions class and overriding its methods allows for arbitrary logic to be used in defining the rules governing the permissions, but many cases can be covered by more constrained rule specifications. In particular, the rules for many models can be specified in terms of the role- based permissions system described above. A built-in subclass of ``BasePermissions``, called ``RoleBasedPermissions``, makes this easy. Creating an instance of ``RoleBasedPermissions`` involves passing in the following parameters:"
msgstr "crwdns15602:0crwdne15602:0"

#: ../../dev/uap/implementation.rst:244
msgid "Tuples of role kinds that should be granted each of the CRUD permissions, encoded in the following parameters: ``can_be_created_by``, ``can_be_read_by``, ``can_be_updated_by``, ``can_be_deleted_by``."
msgstr "crwdns15603:0crwdne15603:0"

#: ../../dev/uap/implementation.rst:247
msgid "The ``target_field`` parameter that determines the \"target\" object for the role-checking; this should be the name of a field on the model that foreign keys either onto a ``FacilityUser`` or a ``Collection``. If the model we're checking permissions for is itself the target, then ``target_field`` may be ``\".\"``."
msgstr "crwdns15604:0crwdne15604:0"

#: ../../dev/uap/implementation.rst:253
msgid "An example, showing that read permissions should be granted to a coach or admin for the user referred to by the model's \"user\" field. Similarly, write permissions should only be available to an admin for the user::"
msgstr "crwdns15605:0crwdne15605:0"

#: ../../dev/uap/implementation.rst:270
msgid "Built-in Permissions Classes"
msgstr "crwdns15606:0crwdne15606:0"

#: ../../dev/uap/implementation.rst:272
msgid "Some common rules are encapsulated by the permissions classes in ``kolibri.auth.permissions.general``. These include:"
msgstr "crwdns15607:0crwdne15607:0"

#: ../../dev/uap/implementation.rst:275
msgid "``IsOwn``: only allows access to the object if the object belongs to the requesting user (in other words, if the object has a specific field, ``field_name``, that foreign keys onto the user)"
msgstr "crwdns15608:0crwdne15608:0"

#: ../../dev/uap/implementation.rst:278
msgid "``IsFromSameFacility``: only allows access to object if user is associated with the same facility as the object"
msgstr "crwdns15609:0crwdne15609:0"

#: ../../dev/uap/implementation.rst:280
msgid "``IsSelf``: only allows access to the object if the object *is* the user"
msgstr "crwdns15610:0crwdne15610:0"

#: ../../dev/uap/implementation.rst:282
msgid "A general pattern with these provided classes is to allow an argument called ``read_only``, which means that rather than allowing both write (create, update, delete) and read permissions, they will only grant read permission. So, for example, ``IsFromSameFacility(read_only=True)`` will allow any user from the same facility to read the model, but not to write to it, whereas ``IsFromSameFacility(read_only=False)`` or ``IsFromSameFacility()`` would allow both."
msgstr "crwdns15611:0crwdne15611:0"

#: ../../dev/uap/implementation.rst:291
msgid "Combining Permissions Classes"
msgstr "crwdns15612:0crwdne15612:0"

#: ../../dev/uap/implementation.rst:293
msgid "In many cases, it may be necessary to combine multiple permission classes together to define the ruleset that you want. This can be done using the Boolean operators ``|`` (OR) and ``&`` (AND). So, for example, ``IsOwn(field_name=\"user\") | IsSelf()`` would allow access to the model if either the model has a foreign key named \"user\" that points to the user, or the model is *itself* the user model. Combining two permission classes with ``&``, on the other hand, means both classes must return ``True`` for a permission to be granted. Note that permissions classes combined in this way still support the ``readable_by_user_filter`` method, returning a queryset that is either the union (for ``|``) or intersection (``&``) of the querysets that were returned by each of the permissions classes."
msgstr "crwdns15613:0crwdne15613:0"

#: ../../dev/uap/implementation.rst:306
msgid "Checking Permissions"
msgstr "crwdns15614:0crwdne15614:0"

#: ../../dev/uap/implementation.rst:308
msgid "Checking whether a user has permission to perform a CRUD operation on an object involves calling the appropriate methods on the ``KolibriAbstractBaseUser`` (``FacilityUser`` or ``DeviceOwner``) instance. For instance, to check whether request.user has delete permission for ``ContentSummaryLog`` instance log_obj, you could do::"
msgstr "crwdns15615:0crwdne15615:0"

#: ../../dev/uap/implementation.rst:317
msgid "Checking whether a user can create an object is slightly different, as you may not yet have an instance of the model. Instead, pass in the model class and a ``dict`` of the data that you want to create it with::"
msgstr "crwdns15616:0crwdne15616:0"

#: ../../dev/uap/implementation.rst:325
msgid "To efficiently filter a queryset so that it only includes records that the user should have permission to read (to make sure you're not sending them data they shouldn't be able to access), use the ``filter_readable`` method::"
msgstr "crwdns15617:0crwdne15617:0"

#: ../../dev/uap/implementation.rst:332
msgid "Note that for the ``DeviceOwner`` model, these methods will simply return ``True`` (or unfiltered querysets), as device owners are considered superusers. For the ``FacilityUser`` model, they defer to the permissions encoded in the ``permission`` object on the model class."
msgstr "crwdns15618:0crwdne15618:0"

#: ../../dev/uap/implementation.rst:339
msgid "Using Kolibri Permissions with Django REST Framework"
msgstr "crwdns15619:0crwdne15619:0"

#: ../../dev/uap/implementation.rst:341
msgid "There are two classes that make it simple to leverage the permissions system described above within a Django REST Framework ``ViewSet``, to restrict permissions appropriately on API endpoints, based on the currently logged-in user."
msgstr "crwdns15620:0crwdne15620:0"

#: ../../dev/uap/implementation.rst:346
msgid "``KolibriAuthPermissions`` is a subclass of ``rest_framework.permissions.BasePermission`` that defers to our ``KolibriAbstractBaseUser`` permissions interface methods for determining which object-level permissions to grant to the current user:"
msgstr "crwdns15621:0crwdne15621:0"

#: ../../dev/uap/implementation.rst:351
msgid "Permissions for 'POST' are based on ``request.user.can_create``"
msgstr "crwdns15622:0crwdne15622:0"

#: ../../dev/uap/implementation.rst:352
msgid "Permissions for 'GET', 'OPTIONS' and 'HEAD' are based on ``request.user.can_read`` (Note that adding ``KolibriAuthPermissions`` only checks object-level permissions, and does not filter queries made against a list view; see ``KolibriAuthPermissionsFilter`` below)"
msgstr "crwdns15623:0crwdne15623:0"

#: ../../dev/uap/implementation.rst:356
msgid "Permissions for 'PUT' and 'PATCH' are based on ``request.user.can_update``"
msgstr "crwdns15624:0crwdne15624:0"

#: ../../dev/uap/implementation.rst:357
msgid "Permissions for 'DELETE' are based on ``request.user.can_delete``"
msgstr "crwdns15625:0crwdne15625:0"

#: ../../dev/uap/implementation.rst:359
msgid "``KolibriAuthPermissions`` is a subclass of ``rest_framework.filters.BaseFilterBackend`` that filters list views to include only records for which the current user has read permissions. This only applies to 'GET' requests."
msgstr "crwdns15626:0crwdne15626:0"

#: ../../dev/uap/implementation.rst:364
msgid "For example, to use the Kolibri permissions system to restrict permissions for an API endpoint providing access to a ``ContentLog`` model, you would do the following::"
msgstr "crwdns15627:0crwdne15627:0"

#: ../../dev/user_management.rst:2
msgid "User Management"
msgstr "crwdns15628:0crwdne15628:0"

#: ../../dev/user_management.rst:4
msgid "For now, this is a high-level spec that identifies the major components of a work-in-progress part of Kolibri. It is a mixture of a descriptive specification for an app, as well as how it interacts with the kolibri.auth back-end layer below it. Eventually, it could serve as a user manual."
msgstr "crwdns15629:0crwdne15629:0"

#: ../../dev/user_management.rst:9
msgid "The User Management allows a user with sufficient permissions to do a number of things related to managing accounts and roles. It's divided into two distinct sections"
msgstr "crwdns15630:0crwdne15630:0"

#: ../../dev/user_management.rst:13
msgid "Learner Management"
msgstr "crwdns15631:0crwdne15631:0"

#: ../../dev/user_management.rst:15
msgid "Learner Management provides an interface for:"
msgstr "crwdns15632:0crwdne15632:0"

#: ../../dev/user_management.rst:17
msgid "Viewing Classrooms and Learner Groups and a list of the learners they contain."
msgstr "crwdns15633:0crwdne15633:0"

#: ../../dev/user_management.rst:18
msgid "Creating new Classrooms."
msgstr "crwdns15634:0crwdne15634:0"

#: ../../dev/user_management.rst:19
msgid "Creating new Learner Groups."
msgstr "crwdns15635:0crwdne15635:0"

#: ../../dev/user_management.rst:20
msgid "Creating new user accounts and assigning them to Classrooms and Learner Groups."
msgstr "crwdns15636:0crwdne15636:0"

#: ../../dev/user_management.rst:21
msgid "Assigning existing accounts individually or in batches to Classrooms and Learner Groups."
msgstr "crwdns15637:0crwdne15637:0"

#: ../../dev/user_management.rst:22
msgid "Editing a learner's details, including resetting their password."
msgstr "crwdns15638:0crwdne15638:0"

#: ../../dev/user_management.rst:24
msgid "The main interface of the Learner Management app is currently described in the mailing list thread \"Learner Management app in Kolibri\". We assume the session user (the user who is visiting Learner Management) has write permissions for any object represented in the Learner Management interface. For example, only classrooms and learner groups for which the user has write permissions will be displayed in the Classroom and Group Selectors. In practice this could mean that when the page loads a list of classrooms for which the session user is either a coach or admin will be fetched. At the time of this writing, the only source to determine which users enjoy which permissions is the ``kolibri.auth`` test suite."
msgstr "crwdns15639:0crwdne15639:0"

#: ../../dev/user_management.rst:32
msgid "**Roadmap:** Moving forward, we are making digital prototypes for Learner Management. The aim is to get quality feedback from likely users to inform the design. IMO it is premature to consider a design as stable prior to such feedback. Role Management should be given a similar treatment -- quickly create digital prototypes and get quality feedback."
msgstr "crwdns15640:0crwdne15640:0"

#: ../../dev/user_management.rst:37
msgid "Learner Management has several conceptual parts. These may not reflect how they're divided as Vue components, so I try to reference the current implementation below. The application corresponds to ``management/assets/app-root.vue`` and has several subcomponents."
msgstr "crwdns15641:0crwdne15641:0"

#: ../../dev/user_management.rst:42
msgid "Learner Roster"
msgstr "crwdns15642:0crwdne15642:0"

#: ../../dev/user_management.rst:44
msgid "Displays a list of learners determined by the current selectors and filters. Will update automatically based on user interaction with the selectors and filters. Each item in this list corresponds to a learner and has:"
msgstr "crwdns15643:0crwdne15643:0"

#: ../../dev/user_management.rst:47
msgid "A checkbox for bulk-selecting learners. Selecting multiple learners enables some actions described below."
msgstr "crwdns15644:0crwdne15644:0"

#: ../../dev/user_management.rst:48
msgid "A ``last name, first name`` clickable link. Doing so summons a detail view modal for the learner."
msgstr "crwdns15645:0crwdne15645:0"

#: ../../dev/user_management.rst:49
msgid "A ``manage`` button which summons a class and group management modal for that student."
msgstr "crwdns15646:0crwdne15646:0"

#: ../../dev/user_management.rst:52
msgid "The roster described here corresponds to ``user-page.vue``."
msgstr "crwdns15647:0crwdne15647:0"

#: ../../dev/user_management.rst:54
msgid "The detail view modal displays learner account data and provides a mechanism to reset a learner's password."
msgstr "crwdns15648:0crwdne15648:0"

#: ../../dev/user_management.rst:56
msgid "The class and group management modal displays a list classrooms to which the student belongs. Each classroom has a dropdown menu for assinging that learner to a specific group within that classroom. Additionally each classroom has a checkbox for bulk-selection. Bulk-selecting permits the session user to remove the learner from the selected clasrooms. Clicking \"add\" reveals classrooms to which the user doesn't already belong. The learner may be added to those classrooms by selecting them with the corresponding checkboxes, and simultaneously select a group through the associated group dropdown."
msgstr "crwdns15649:0crwdne15649:0"

#: ../../dev/user_management.rst:63
msgid "**UI simplification:** There are a number of simplifying assumptions made here. For one, kolibri.auth permits a learner to belong to multiple groups within a classroom. Here we only allow a learner to belong to one group per classroom in order to simplify the UI."
msgstr "crwdns15650:0crwdne15650:0"

#: ../../dev/user_management.rst:68
msgid "**UI simplification:** Secondly, kolibri.auth has no notion of being \"ungrouped\". The kolibri.auth module defines a Membership model that associates users to Learner Group and Classroom models. For the purposes of this app, when a learner is assigned to a group, then a Membership object to the underlying Learner Group object is created. Membership in a Learner Group implies the user is a member of the containing Classroom as well. When a learner is assigned to the \"Ungrouped\" group of a Classroom, it correponds to creating a Membership object associated with the Classroom. In all cases re-assigning a user to a different group should both destroy the existing Membership object and create a new one."
msgstr "crwdns15651:0crwdne15651:0"

#: ../../dev/user_management.rst:76
msgid "**Roadmap:** I consider the detail view and class and group management modals to be somewhat unsettled prior to getting quality user feedback."
msgstr "crwdns15652:0crwdne15652:0"

#: ../../dev/user_management.rst:82
msgid "Selectors and filters"
msgstr "crwdns15653:0crwdne15653:0"

#: ../../dev/user_management.rst:84
msgid "The UI allows the list of learner in the roster to be filtered. This includes:"
msgstr "crwdns15654:0crwdne15654:0"

#: ../../dev/user_management.rst:86
msgid "A classroom selector. This is populated by a list of classrooms for which the session user has write permissions, and the special option \"All classrooms\". The list of learners is filtered to only show learners who are members of the selected classroom, or all learners if \"All classrooms\" is selected."
msgstr "crwdns15655:0crwdne15655:0"

#: ../../dev/user_management.rst:89
msgid "A group selector. This is disabled if \"All classrooms\" is selected. Otherwise it is populated with the list of Learner Groups in the classroom with the special option \"All groups\". This filters the list of learner analogously to the classroom selector."
msgstr "crwdns15656:0crwdne15656:0"

#: ../../dev/user_management.rst:92
msgid "Potentially other filters, for example listing learners in alphabetical or reverse-alphabetical order."
msgstr "crwdns15657:0crwdne15657:0"

#: ../../dev/user_management.rst:95
msgid "Miscellaneous widgets"
msgstr "crwdns15658:0crwdne15658:0"

#: ../../dev/user_management.rst:97
msgid "Next to the classroom and group selectors are \"add\" and \"remove\" buttons. Clicking \"add\" summons a modal form for creating a new classroom and a new learner group within the currently selected classroom, respectively. The \"add\" button for groups is disabled if \"All classrooms\" is selected. Clicking \"remove\" deletes the currently selected classroom or learner group, respectively. The corresponding \"delete\" button is disabled if \"All classrooms\" or \"All groups\" is selected."
msgstr "crwdns15659:0crwdne15659:0"

#: ../../dev/user_management.rst:103
msgid "Space is reserved next to the roster for an information panel to display elaborating information based on the current selection. Right now it includes only the total # of students which match the criteria determined by the selectors and filters."
msgstr "crwdns15660:0crwdne15660:0"

#: ../../dev/user_management.rst:108
msgid "Facility Management"
msgstr "crwdns15661:0crwdne15661:0"

#: ../../dev/user_management.rst:110
msgid "Facility Management (previously referred to as Role Management) will provide an interface for managing user Roles in a Facility. Users may multiply possess Coach and Admin roles for a Facility or Classrooms within a Facility."
msgstr "crwdns15662:0crwdne15662:0"

#: ../../dev/user_management.rst:113
msgid "Kolibri user data is fundamentally divided into Facilities -- a user who belongs to one Facility can never see or interact with user account data from another Facility. However Kolibri provides another user type, called a Device Owner. Device Owners differ from Facility Users in the following ways:"
msgstr "crwdns15663:0crwdne15663:0"

#: ../../dev/user_management.rst:117
msgid "Device Owners are not syncable from device to device -- this account type belongs to one physical machine only. In contrast, Facility Users account and their associated data are syncable."
msgstr "crwdns15664:0crwdne15664:0"

#: ../../dev/user_management.rst:119
msgid "Device Owners enjoy every permission. They can be considered Admins for every Facility on the device."
msgstr "crwdns15665:0crwdne15665:0"

#: ../../dev/user_management.rst:120
msgid "Device Owners may see and edit *all* Facilities on their Device, including choosing *which* Facility data sets are present on a physical device."
msgstr "crwdns15666:0crwdne15666:0"

#: ../../dev/user_management.rst:123
msgid "The purview of the Facility Management app is to allow users to give and revoke the Coach and Admin roles for the Facility they belong to and the various Classrooms in that Facility. Moreover the functionality of the app is slightly differnt if the session user is a device owner:"
msgstr "crwdns15667:0crwdne15667:0"

#: ../../dev/user_management.rst:127
msgid "If the session user is a Device Owner, the user may select which Facility to manage. Facility Users may only manage their own Facility."
msgstr "crwdns15668:0crwdne15668:0"

#: ../../dev/user_management.rst:129
msgid "A Device Owner may edit or delete a Facility. Editing a Facility can change it's details like name, description, etc. Deleting a Facility does not destroy it -- it is just removed from that device, so that Facility Users tied to that Facility may no longer log in."
msgstr "crwdns15669:0crwdne15669:0"

#: ../../dev/user_management.rst:133
msgid "**Roadmap:** Jessica has begun designing this. See `the invision prototype. <https://projects.invisionapp.com/share/YJ75P75QH>`_"
msgstr "crwdns15670:0crwdne15670:0"

