[tox]
envlist = py{2.7,3.4,3.5,pypy}, pythonlint, npmbuild, node{4.x, 5.x}, docs, bdd, node, postgres, pythonbuild{2.7, 3.4, 3.5}

[testenv]
usedevelop = True
whitelist_externals=rm
setenv =
    PYTHONPATH = {toxinidir}
    KOLIBRI_HOME = {toxinidir}/kolibrihome_test
    DJANGO_SETTINGS_MODULE = kolibri.deployment.default.settings.test
basepython =
    pythonbuild2.7: python2.7
    pythonbuild3.4: python3.4
    pythonbuild3.5: python3.5
    licenses: python2.7
    py2.7: python2.7
    py3.4: python3.4
    py3.5: python3.5
    pypy: pypy
    docs: python2.7
    pythonlint: python2.7
    bdd: python2.7
    node4.x: python2.7
    node5.x: python2.7
    npmbuild: python2.7
deps =
    -r{toxinidir}/requirements/test.txt
commands =
    # Enable the plugins to ensure the configuration is read without error
    kolibri plugin kolibri.plugins.learn enable
    kolibri plugin kolibri.plugins.management enable
    py.test --cov=kolibri --color=no {posargs}
    rm -r {env:KOLIBRI_HOME}

[testenv:postgres]
setenv =
    PYTHONPATH = {toxinidir}
    KOLIBRI_HOME = {toxinidir}/kolibrihome_test
    DJANGO_SETTINGS_MODULE = kolibri.deployment.default.settings.postgres_test
basepython =
    postgres: python2.7
deps =
    -r{toxinidir}/requirements/test.txt
    -r{toxinidir}/requirements/postgres.txt

[testenv:pythonlint]
deps =
    flake8
commands =
    flake8 kolibri

##### remove the link checker test because it causes random failures
#[testenv:docs]
#changedir=docs/
#deps =
#    -r{toxinidir}/requirements/docs.txt
#commands =
#    sphinx-build -b linkcheck ./ _build/

[testenv:bdd]
deps =
    -r{toxinidir}/requirements/bdd.txt
commands =
    python setup.py bdd

[node_base]
whitelist_externals =
    yarn
commands =
    yarn
    yarn run coverage

[testenv:node4.x]
whitelist_externals = {[node_base]whitelist_externals}
commands = {[node_base]commands}

[testenv:node5.x]
whitelist_externals = {[node_base]whitelist_externals}
commands = {[node_base]commands}

[testenv:npmbuild]
whitelist_externals = {[node_base]whitelist_externals}
commands =
    yarn
    yarn run build
    yarn run test-build

[conditional_testing_base]
whitelist_externals =
    {toxinidir}/test/if.sh

[python_build_base]
commands =
    {toxinidir}/test/if.sh "setup_changed"

[testenv:pythonbuild2.7]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands = {[python_build_base]commands}

[testenv:pythonbuild3.4]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands = {[python_build_base]commands}

[testenv:pythonbuild3.5]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands = {[python_build_base]commands}

[testenv:licenses]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands =
    {toxinidir}/test/if.sh "requirements_changed"
